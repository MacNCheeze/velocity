{
    "project": {
        "name": "Velocity",
        "description": "Test runner for Meteor apps",
        "version": "0.2.13"
    },
    "files": {
        ".build.velocity:core/os.osx.x86_64/packages/velocity:core/default-fixture.js": {
            "name": ".build.velocity:core/os.osx.x86_64/packages/velocity:core/default-fixture.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        ".build.velocity:core/os.osx.x86_64/packages/velocity:core.js": {
            "name": ".build.velocity:core/os.osx.x86_64/packages/velocity:core.js",
            "modules": {
                "Velocity                                                                                                  // 9\n/                                                                                                                  // 10\n/**                                                                                                                  // 11": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        ".build10059..build.velocity:core/os.osx.x86_64/packages/velocity:core/default-fixture.js": {
            "name": ".build10059..build.velocity:core/os.osx.x86_64/packages/velocity:core/default-fixture.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        ".build10059..build.velocity:core/os.osx.x86_64/packages/velocity:core.js": {
            "name": ".build10059..build.velocity:core/os.osx.x86_64/packages/velocity:core.js",
            "modules": {},
            "classes": {
                "Velocity                                                                                                   // 12\n/                                                                                                                  // 13\nVelocity = {};                                                                                                       // 14\n                                                                                                                    // 15\n(function () {                                                                                                       // 16\n 'use strict';                                                                                                      // 17\n                                                                                                                    // 18\n//////////////////////////////////////////////////////////////////////                                               // 19\n// Init                                                                                                              // 20\n//                                                                                                                   // 21\n                                                                                                                    // 22\n if (process.env.NODE_ENV !== 'development' || process.env.VELOCITY === '0' || process.env.IS_MIRROR) {             // 23\n   DEBUG && console.log('Not adding velocity code');                                                                // 24\n   return;                                                                                                          // 25\n }                                                                                                                  // 26\n                                                                                                                    // 27\n var isMeteor92OrNewer = function () {                                                                              // 28\n   if (Meteor.release) {                                                                                            // 29\n     var versionRegExp = /(?:METEOR@)?(\\d+)\\.(\\d+)\\.(\\d+)(?:\\.(\\d+))/;                                              // 30\n     var version = versionRegExp.exec(Meteor.release);                                                              // 31\n     if (version) {                                                                                                 // 32\n       var majorVersion = Number(version[1]);                                                                       // 33\n       var minorVersion = Number(version[2]);                                                                       // 34\n       var patchVersion = Number(version[3]);                                                                       // 35\n       if (majorVersion > 0 ||                                                                                      // 36\n         (majorVersion == 0 && minorVersion > 9) ||                                                                 // 37\n         (majorVersion == 0 && minorVersion == 9 && patchVersion >= 2)                                              // 38\n         ) {                                                                                                        // 39\n         return true;                                                                                               // 40\n       }                                                                                                            // 41\n     }                                                                                                              // 42\n   }                                                                                                                // 43\n                                                                                                                    // 44\n   return false;                                                                                                    // 45\n };                                                                                                                 // 46\n                                                                                                                    // 47\n var getAssetPath = function (packageName, fileName) {                                                              // 48\n   var serverAssetsPath = path.join(                                                                                // 49\n     process.env.PWD, '.meteor', 'local', 'build', 'programs', 'server', 'assets'                                   // 50\n   );                                                                                                               // 51\n   if (isMeteor92OrNewer()) {                                                                                       // 52\n     packageName = packageName.replace(':', '_')                                                                    // 53\n   }                                                                                                                // 54\n                                                                                                                    // 55\n   return path.join(serverAssetsPath, 'packages', packageName, fileName);                                           // 56\n };                                                                                                                 // 57\n                                                                                                                    // 58\n var _ = Npm.require('lodash'),                                                                                     // 59\n     fs = Npm.require('fs'),                                                                                        // 60\n     fse = Npm.require('fs-extra'),                                                                                 // 61\n     readFile = Meteor._wrapAsync(fs.readFile),                                                                     // 62\n     writeFile = Meteor._wrapAsync(fs.writeFile),                                                                   // 63\n     copyFile = Meteor._wrapAsync(fse.copy),                                                                        // 64\n     path = Npm.require('path'),                                                                                    // 65\n     url = Npm.require('url'),                                                                                      // 66\n     Rsync = Npm.require('rsync'),                                                                                  // 67\n     Future = Npm.require('fibers/future'),                                                                         // 68\n     freeport = Npm.require('freeport'),                                                                            // 69\n     child_process = Npm.require('child_process'),                                                                  // 70\n     spawn = child_process.spawn,                                                                                   // 71\n     chokidar = Npm.require('chokidar'),                                                                            // 72\n     glob = Npm.require('glob'),                                                                                    // 73\n     _config = {},                                                                                                  // 74\n     _preProcessors = [],                                                                                           // 75\n     _postProcessors = [],                                                                                          // 76\n     _watcher,                                                                                                      // 77\n     FIXTURE_REG_EXP = new RegExp(\"-fixture.(js|coffee)$\"),                                                         // 78\n     DEFAULT_FIXTURE_PATH = getAssetPath('velocity:core', 'default-fixture.js');                                    // 79\n                                                                                                                    // 80\n Meteor.startup(function initializeVelocity () {                                                                    // 81\n   DEBUG && console.log('[velocity] PWD', process.env.PWD);                                                         // 82\n   DEBUG && console.log('velocity config =', JSON.stringify(_config, null, 2));                                     // 83\n                                                                                                                    // 84\n   // kick-off everything                                                                                           // 85\n   _reset(_config);                                                                                                 // 86\n });                                                                                                                // 87\n                                                                                                                    // 88\n//////////////////////////////////////////////////////////////////////                                               // 89\n// Public Methods                                                                                                    // 90\n//                                                                                                                   // 91\n                                                                                                                    // 92\n _.extend(Velocity, {                                                                                               // 93\n                                                                                                                    // 94\n   getMirrorPath: function () {                                                                                     // 95\n     return path.join(process.env.PWD, '.meteor', 'local', '.mirror');                                              // 96\n   },                                                                                                               // 97\n                                                                                                                    // 98\n   getTestsPath: function () {                                                                                      // 99\n     return path.join(process.env.PWD, 'tests');                                                                    // 100\n   },                                                                                                               // 101\n                                                                                                                    // 102\n   addPreProcessor: function (preProcessor) {                                                                       // 103\n     _preProcessors.push(preProcessor);                                                                             // 104\n   },                                                                                                               // 105\n                                                                                                                    // 106\n   addPostProcessor: function (reporter) {                                                                          // 107\n     _postProcessors.push(reporter);                                                                                // 108\n   },                                                                                                               // 109\n                                                                                                                    // 110\n   getReportGithubIssueMessage: function() {                                                                        // 111\n     return \"Please report the issue here: https://github.com/xolvio/velocity/issues\";                              // 112\n   }                                                                                                                // 113\n });                                                                                                                // 114\n                                                                                                                    // 115\n if (Meteor.isServer) {                                                                                             // 116\n   _.extend(Velocity, {                                                                                             // 117\n                                                                                                                    // 118\n     /**                                                                                                            // 119\nRegisters a testing framework plugin.                                                                       // 120\n                                                                                                            // 121": 1,
                "FileCopier                                                                                                 // 12": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "lib/FileCopier.js": {
            "name": "lib/FileCopier.js",
            "modules": {},
            "classes": {
                "FileCopier": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "default-fixture.js": {
            "name": "default-fixture.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "main.js": {
            "name": "main.js",
            "modules": {
                "Velocity": 1
            },
            "classes": {
                "Velocity": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "Velocity                                                                                                  // 9\n/                                                                                                                  // 10\n/**                                                                                                                  // 11": {
            "name": "Velocity                                                                                                  // 9\n/                                                                                                                  // 10\n/**                                                                                                                  // 11",
            "submodules": {},
            "classes": {
                "Velocity                                                                                                   // 12\n/                                                                                                                  // 13\nVelocity = {};                                                                                                       // 14\n                                                                                                                    // 15\n(function () {                                                                                                       // 16\n 'use strict';                                                                                                      // 17\n                                                                                                                    // 18\n//////////////////////////////////////////////////////////////////////                                               // 19\n// Init                                                                                                              // 20\n//                                                                                                                   // 21\n                                                                                                                    // 22\n if (process.env.NODE_ENV !== 'development' || process.env.VELOCITY === '0' || process.env.IS_MIRROR) {             // 23\n   DEBUG && console.log('Not adding velocity code');                                                                // 24\n   return;                                                                                                          // 25\n }                                                                                                                  // 26\n                                                                                                                    // 27\n var isMeteor92OrNewer = function () {                                                                              // 28\n   if (Meteor.release) {                                                                                            // 29\n     var versionRegExp = /(?:METEOR@)?(\\d+)\\.(\\d+)\\.(\\d+)(?:\\.(\\d+))/;                                              // 30\n     var version = versionRegExp.exec(Meteor.release);                                                              // 31\n     if (version) {                                                                                                 // 32\n       var majorVersion = Number(version[1]);                                                                       // 33\n       var minorVersion = Number(version[2]);                                                                       // 34\n       var patchVersion = Number(version[3]);                                                                       // 35\n       if (majorVersion > 0 ||                                                                                      // 36\n         (majorVersion == 0 && minorVersion > 9) ||                                                                 // 37\n         (majorVersion == 0 && minorVersion == 9 && patchVersion >= 2)                                              // 38\n         ) {                                                                                                        // 39\n         return true;                                                                                               // 40\n       }                                                                                                            // 41\n     }                                                                                                              // 42\n   }                                                                                                                // 43\n                                                                                                                    // 44\n   return false;                                                                                                    // 45\n };                                                                                                                 // 46\n                                                                                                                    // 47\n var getAssetPath = function (packageName, fileName) {                                                              // 48\n   var serverAssetsPath = path.join(                                                                                // 49\n     process.env.PWD, '.meteor', 'local', 'build', 'programs', 'server', 'assets'                                   // 50\n   );                                                                                                               // 51\n   if (isMeteor92OrNewer()) {                                                                                       // 52\n     packageName = packageName.replace(':', '_')                                                                    // 53\n   }                                                                                                                // 54\n                                                                                                                    // 55\n   return path.join(serverAssetsPath, 'packages', packageName, fileName);                                           // 56\n };                                                                                                                 // 57\n                                                                                                                    // 58\n var _ = Npm.require('lodash'),                                                                                     // 59\n     fs = Npm.require('fs'),                                                                                        // 60\n     fse = Npm.require('fs-extra'),                                                                                 // 61\n     readFile = Meteor._wrapAsync(fs.readFile),                                                                     // 62\n     writeFile = Meteor._wrapAsync(fs.writeFile),                                                                   // 63\n     copyFile = Meteor._wrapAsync(fse.copy),                                                                        // 64\n     path = Npm.require('path'),                                                                                    // 65\n     url = Npm.require('url'),                                                                                      // 66\n     Rsync = Npm.require('rsync'),                                                                                  // 67\n     Future = Npm.require('fibers/future'),                                                                         // 68\n     freeport = Npm.require('freeport'),                                                                            // 69\n     child_process = Npm.require('child_process'),                                                                  // 70\n     spawn = child_process.spawn,                                                                                   // 71\n     chokidar = Npm.require('chokidar'),                                                                            // 72\n     glob = Npm.require('glob'),                                                                                    // 73\n     _config = {},                                                                                                  // 74\n     _preProcessors = [],                                                                                           // 75\n     _postProcessors = [],                                                                                          // 76\n     _watcher,                                                                                                      // 77\n     FIXTURE_REG_EXP = new RegExp(\"-fixture.(js|coffee)$\"),                                                         // 78\n     DEFAULT_FIXTURE_PATH = getAssetPath('velocity:core', 'default-fixture.js');                                    // 79\n                                                                                                                    // 80\n Meteor.startup(function initializeVelocity () {                                                                    // 81\n   DEBUG && console.log('[velocity] PWD', process.env.PWD);                                                         // 82\n   DEBUG && console.log('velocity config =', JSON.stringify(_config, null, 2));                                     // 83\n                                                                                                                    // 84\n   // kick-off everything                                                                                           // 85\n   _reset(_config);                                                                                                 // 86\n });                                                                                                                // 87\n                                                                                                                    // 88\n//////////////////////////////////////////////////////////////////////                                               // 89\n// Public Methods                                                                                                    // 90\n//                                                                                                                   // 91\n                                                                                                                    // 92\n _.extend(Velocity, {                                                                                               // 93\n                                                                                                                    // 94\n   getMirrorPath: function () {                                                                                     // 95\n     return path.join(process.env.PWD, '.meteor', 'local', '.mirror');                                              // 96\n   },                                                                                                               // 97\n                                                                                                                    // 98\n   getTestsPath: function () {                                                                                      // 99\n     return path.join(process.env.PWD, 'tests');                                                                    // 100\n   },                                                                                                               // 101\n                                                                                                                    // 102\n   addPreProcessor: function (preProcessor) {                                                                       // 103\n     _preProcessors.push(preProcessor);                                                                             // 104\n   },                                                                                                               // 105\n                                                                                                                    // 106\n   addPostProcessor: function (reporter) {                                                                          // 107\n     _postProcessors.push(reporter);                                                                                // 108\n   },                                                                                                               // 109\n                                                                                                                    // 110\n   getReportGithubIssueMessage: function() {                                                                        // 111\n     return \"Please report the issue here: https://github.com/xolvio/velocity/issues\";                              // 112\n   }                                                                                                                // 113\n });                                                                                                                // 114\n                                                                                                                    // 115\n if (Meteor.isServer) {                                                                                             // 116\n   _.extend(Velocity, {                                                                                             // 117\n                                                                                                                    // 118\n     /**                                                                                                            // 119\nRegisters a testing framework plugin.                                                                       // 120\n                                                                                                            // 121": 1,
                "FileCopier                                                                                                 // 12": 1,
                "FileCopier": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "lib/FileCopier.js",
            "line": 9,
            "itemtype": "method",
            "params": [
                {
                    "name": "name",
                    "description": "The name of the testing framework.                                                     // 123",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "Options for the testing framework.                                                // 124",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "regex",
                            "description": "The regular expression for                                                  // 125\n                                test files that should be assigned                                          // 126\n                                to the testing framework.                                                   // 127\n                                The path relative to the tests                                              // 128\n                                folder is matched against it.                                               // 129\n                                The default is \"name/.+\\.js$\"                                               // 130\n                                (name is the testing framework name).                                       // 131\n/                                                                                                            // 132\n     registerTestingFramework: function (name, options) {                                                           // 133\n       _config[name] = _parseTestingFrameworkOptions(name, options);                                                // 134\n     },                                                                                                             // 135\n     parseXmlFiles: function  (selectedFramework){                                                                  // 136\n        var closeFunc = Meteor.bindEnvironment(function () {                                                        // 137\n          console.log('binding environment and parsing output xml files...')                                        // 138\n                                                                                                                    // 139\n           function hashCode (s) {                                                                                  // 140\n             return s.split(\"\").reduce(function (a, b) {                                                            // 141\n               a = ((a << 5) - a) + b.charCodeAt(0);                                                                // 142\n               return a & a;                                                                                        // 143\n             }, 0);                                                                                                 // 144\n           }                                                                                                        // 145\n                                                                                                                    // 146\n          var newResults = [];                                                                                      // 147\n          //var globSearchString = parsePath('**/FIREFOX*.xml');                                                    // 148\n          var globSearchString = path.join('**', 'FIREFOX_*.xml');                                                  // 149\n          var xmlFiles = glob.sync(globSearchString, { cwd: testReportsPath });                                     // 150\n                                                                                                                    // 151\n          console.log('globSearchString', globSearchString);                                                        // 152\n                                                                                                                    // 153\n          _.each(xmlFiles, function (xmlFile, index) {                                                              // 154\n            parseString(fs.readFileSync(testReportsPath + path.sep + xmlFile), function (err, result) {             // 155\n              _.each(result.testsuites.testsuite, function (testsuite) {                                            // 156\n                _.each(testsuite.testcase, function (testcase) {                                                    // 157\n                  var result = ({                                                                                   // 158\n                    name: testcase.$.name,                                                                          // 159\n                    framework: selectedFramework,                                                                   // 160\n                    result: testcase.failure ? 'failed' : 'passed',                                                 // 161\n                    timestamp: testsuite.$.timestamp,                                                               // 162\n                    time: testcase.$.time,                                                                          // 163\n                    ancestors: [testcase.$.classname]                                                               // 164\n                  });                                                                                               // 165\n                                                                                                                    // 166\n                  if (testcase.failure) {                                                                           // 167\n                    _.each(testcase.failure, function (failure) {                                                   // 168\n                      result.failureType = failure.$.type;                                                          // 169\n                      result.failureMessage = failure.$.message;                                                    // 170\n                      result.failureStackTrace = failure._;                                                         // 171\n                    });                                                                                             // 172\n                  }                                                                                                 // 173\n                  result.id = selectedFramework + ':' + hashCode(xmlFile + testcase.$.classname + testcase.$.name); // 174\n                  newResults.push(result.id);                                                                       // 175\n                  console.log('result', result);                                                                    // 176\n                  Meteor.call('postResult', result);                                                                // 177\n                });                                                                                                 // 178\n              });                                                                                                   // 179\n            });                                                                                                     // 180\n                                                                                                                    // 181\n            if (index === xmlFiles.length - 1) {                                                                    // 182\n              Meteor.call('resetReports', {framework: selectedFramework, notIn: newResults});                       // 183\n              Meteor.call('completed', {framework: selectedFramework});                                             // 184\n            }                                                                                                       // 185\n          });                                                                                                       // 186\n        });                                                                                                         // 187\n     }                                                                                                              // 188\n   });                                                                                                              // 189\n }                                                                                                                  // 190\n                                                                                                                    // 191\n//////////////////////////////////////////////////////////////////////                                               // 192\n// Meteor Methods                                                                                                    // 193\n//                                                                                                                   // 194\n                                                                                                                    // 195\n Meteor.methods({                                                                                                   // 196\n                                                                                                                    // 197\n   /**                                                                                                              // 198\nMeteor method: reset                                                                                          // 199\nRe-init file watcher and clear all test results.                                                              // 200\n                                                                                                              // 201",
                            "type": "String",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "options",
                    "description": "Optional, specify specific framework to clear                                       // 213\n                and/or define a list of tests to keep.                                                        // 214\n                ex.                                                                                           // 215\n                {                                                                                             // 216\n                  framework: 'jasmine-unit',                                                                  // 217\n                  notIn: ['tests/auth-jasmine-unit.js']                                                       // 218\n                }                                                                                             // 219\n/                                                                                                              // 220\n   resetReports: function (options) {                                                                               // 221\n     options = options || {};                                                                                       // 222\n     check(options, {                                                                                               // 223\n       framework: Match.Optional(String),                                                                           // 224\n       notIn: Match.Optional([String])                                                                              // 225\n     });                                                                                                            // 226\n                                                                                                                    // 227\n     var query = {};                                                                                                // 228\n     if (options.framework) {                                                                                       // 229\n       query.framework = options.framework;                                                                         // 230\n     }                                                                                                              // 231\n     if (options.notIn) {                                                                                           // 232\n       query = _.assign(query, {_id: {$nin: options.notIn }});                                                      // 233\n     }                                                                                                              // 234\n     VelocityTestReports.remove(query);                                                                             // 235\n     _updateAggregateReports();                                                                                     // 236\n   },                                                                                                               // 237\n                                                                                                                    // 238\n   /**                                                                                                              // 239\nMeteor method: resetLogs                                                                                      // 240\nClear all log entried.                                                                                        // 241\n                                                                                                              // 242",
                    "type": "Object",
                    "optional": true,
                    "props": []
                },
                {
                    "name": "options",
                    "description": "Optional, specify specific framework to clear                                       // 244\n/                                                                                                              // 245\n   resetLogs: function (options) {                                                                                  // 246\n     options = options || {};                                                                                       // 247\n     check(options, {                                                                                               // 248\n       framework: Match.Optional(String)                                                                            // 249\n     });                                                                                                            // 250\n                                                                                                                    // 251\n     var query = {};                                                                                                // 252\n     if (options.framework) {                                                                                       // 253\n       query.framework = options.framework;                                                                         // 254\n     }                                                                                                              // 255\n     VelocityLogs.remove(query);                                                                                    // 256\n   },                                                                                                               // 257\n                                                                                                                    // 258\n   /**                                                                                                              // 259\nMeteor method: postLog                                                                                        // 260\nLog a method to the central Velocity log store.                                                               // 261\n                                                                                                              // 262",
                    "type": "Object",
                    "optional": true,
                    "props": []
                },
                {
                    "name": "options",
                    "description": "Required parameters:                                                                  // 264\n                  type - String                                                                               // 265\n                  message - String                                                                            // 266\n                  framework - String  ex. 'jasmine-unit'                                                      // 267\n                                                                                                              // 268\n                Optional parameters:                                                                          // 269\n                  timestamp - Date                                                                            // 270\n/                                                                                                              // 271\n   postLog: function (options) {                                                                                    // 272\n     console.log                                                                                                    // 273\n     check(options, {                                                                                               // 274\n       type: String,                                                                                                // 275\n       message: String,                                                                                             // 276\n       framework: String,                                                                                           // 277\n       timestamp: Match.Optional(Match.OneOf(Date, String))                                                         // 278\n     });                                                                                                            // 279\n                                                                                                                    // 280\n     VelocityLogs.insert({                                                                                          // 281\n       timestamp: options.timestamp || new Date(),                                                                  // 282\n       type: options.type,                                                                                          // 283\n       message: options.message,                                                                                    // 284\n       framework: options.framework                                                                                 // 285\n     });                                                                                                            // 286\n   },                                                                                                               // 287\n                                                                                                                    // 288\n   /**                                                                                                              // 289\nMeteor method: postResult                                                                                     // 290\nRecord the results of a test run.                                                                             // 291\n                                                                                                              // 292",
                    "type": "Object",
                    "props": []
                },
                {
                    "name": "data",
                    "description": "Required fields:                                                                         // 294\n                  id - String                                                                                 // 295\n                  name - String                                                                               // 296\n                  framework - String  ex. 'jasmine-unit'                                                      // 297\n                  result - String.  ex. 'failed', 'passed' or 'pending'                                       // 298\n                                                                                                              // 299\n                Suggested fields:                                                                             // 300\n                  isClient - {Boolean] Is it a client test?                                                   // 301\n                  isServer - {Boolean} Is it a server test?                                                   // 302\n                  browser  - {String} In which browser did the test run?                                      // 303\n                  timestamp - {Date} The time that the test started for this result                           // 304\n                  async - // TODO @rissem to write                                                            // 305\n                  timeOut - // TODO @rissem to write                                                          // 306\n                  failureType - {String} ex 'expect' or 'assert'                                              // 307\n                  failureMessage - {String} The failure message from the test framework                       // 308\n                  failureStackTrace - {String} The stack trace associated with the failure                    // 309\n                  ancestors - The hierarchy of suites and blocks above this test                              // 310\n                              ex. 'Template.leaderboard.selected_name'                                        // 311\n/                                                                                                              // 312\n   postResult: function (data) {                                                                                    // 313\n     // Nightwatch doesn't return failureType, failureMessage, feailureStackTrace, or ancestors                     // 314\n     // we can't assume that a test framework will have that informationPhoenix42                                   // 315\n     check(data, Match.ObjectIncluding({                                                                            // 316\n       id: String,                                                                                                  // 317\n       name: String,                                                                                                // 318\n       framework: _matchOneOf(_.keys(_config)),                                                                     // 319\n       result: _matchOneOf(['passed', 'failed', 'pending']),                                                        // 320\n       isClient: Match.Optional(Boolean),                                                                           // 321\n       isServer: Match.Optional(Boolean),                                                                           // 322\n       browser: Match.Optional(_matchOneOf(['chrome', 'firefox', 'internet explorer', 'opera', 'safari'])), // TODO: Add missing values\n       timestamp: Match.Optional(Match.OneOf(Date, String)),                                                        // 324\n       async: Match.Optional(Boolean),                                                                              // 325\n       timeOut: Match.Optional(Match.Any)                                                                           // 326\n       //failureType: Match.Optional(String),                                                                       // 327\n       //failureMessage: Match.Optional(String),                                                                    // 328\n       //failureStackTrace: Match.Optional(Match.Any),                                                              // 329\n       //ancestors: Match.Optional([String])                                                                        // 330\n     }));                                                                                                           // 331\n                                                                                                                    // 332\n     VelocityTestReports.upsert(data.id, {$set: data});                                                             // 333\n     _updateAggregateReports();                                                                                     // 334\n   },  // end postResult                                                                                            // 335\n                                                                                                                    // 336\n   /**                                                                                                              // 337\nMeteor method: completed                                                                                      // 338\nFrameworks must call this method to inform Velocity they have completed                                       // 339\ntheir current test runs. Velocity uses this flag when running in CI mode.                                     // 340\n                                                                                                              // 341",
                    "type": "Object"
                },
                {
                    "name": "data",
                    "description": "Required fields:                                                                         // 343\n                  framework - String  ex. 'jasmine-unit'                                                      // 344\n/                                                                                                              // 345\n   completed: function (data) {                                                                                     // 346\n     check(data, {                                                                                                  // 347\n       framework: String                                                                                            // 348\n     });                                                                                                            // 349\n                                                                                                                    // 350\n     VelocityAggregateReports.upsert({'name': data.framework}, {$set: {'result': 'completed'}});                    // 351\n     _updateAggregateReports();                                                                                     // 352\n   },  // end completed                                                                                             // 353\n                                                                                                                    // 354\n   /**                                                                                                              // 355\nMeteor method: copySampleTests                                                                                // 356\nCopy sample tests from frameworks `sample-tests` directories                                                  // 357\nto user's `app/tests` directory.                                                                              // 358\n                                                                                                              // 359",
                    "type": "Object"
                },
                {
                    "name": "options",
                    "description": "// 361\n    ex. {framework: 'jasmine-unit'}                                                                           // 362\n/                                                                                                              // 363\n   copySampleTests: function (options) {                                                                            // 364\n     var pwd = process.env.PWD,                                                                                     // 365\n         samplesPath,                                                                                               // 366\n         testsPath,                                                                                                 // 367\n         command;                                                                                                   // 368\n                                                                                                                    // 369\n     options = options || {};                                                                                       // 370\n     check(options, {                                                                                               // 371\n       framework: String                                                                                            // 372\n     });                                                                                                            // 373\n                                                                                                                    // 374\n     samplesPath = path.join(pwd, 'packages', options.framework, 'sample-tests');                                   // 375\n     testsPath = path.join(pwd, 'tests');                                                                           // 376\n                                                                                                                    // 377\n     DEBUG && console.log('[velocity] checking for sample tests in', path.join(samplesPath, '*'));                  // 378\n                                                                                                                    // 379\n     if (fs.existsSync(samplesPath)) {                                                                              // 380\n       command = 'mkdir -p ' + testsPath + ' && ' +                                                                 // 381\n         'rsync -au ' + path.join(samplesPath, '*') +                                                               // 382\n         ' ' + testsPath + path.sep;                                                                                // 383\n                                                                                                                    // 384\n       DEBUG && console.log('[velocity] copying sample tests (if any) for framework', options.framework, '-', command);\n                                                                                                                    // 386\n       child_process.exec(command, Meteor.bindEnvironment(                                                          // 387\n         function copySampleTestsExecHandler (err, stdout, stderr) {                                                // 388\n           if (err) {                                                                                               // 389\n             console.log('ERROR', err);                                                                             // 390\n           }                                                                                                        // 391\n           console.log(stdout);                                                                                     // 392\n           console.log(stderr);                                                                                     // 393\n         },                                                                                                         // 394\n         'copySampleTestsExecHandler'                                                                               // 395\n       ));                                                                                                          // 396\n     }                                                                                                              // 397\n   },  // end copySampleTests                                                                                       // 398\n                                                                                                                    // 399\n   /**                                                                                                              // 400\nMeteor method: velocityStartMirror                                                                            // 401\n                                                                                                              // 402\nStarts a mirror and copies any specified fixture files into the mirror.                                       // 403\nTODO and will remove any registered frameworks and reporters from the mirror                                  // 404\n                                                                                                              // 405",
                    "type": "Object",
                    "props": []
                },
                {
                    "name": "options",
                    "description": "Required fields:                                                                      // 407\n                  name - String ex. 'mocha-web-1'                                                             // 408\n                                                                                                              // 409\n                Optional parameters:                                                                          // 410\n                  fixtureFiles - Array of files with absolute paths                                           // 411\n                  port - String use a specific port instead of finding the next available one                 // 412\n                                                                                                              // 413",
                    "type": "Object",
                    "props": []
                },
                {
                    "name": "database",
                    "description": "// 524"
                },
                {
                    "name": "port",
                    "description": "Mirror port                                                                                         // 542"
                },
                {
                    "name": "fixtureFiles",
                    "description": "Array with fixture file paths.                                                              // 560"
                },
                {
                    "name": "url",
                    "description": "requiredFields  The target location                                                // 578\n                                                                                                                // 579"
                },
                {
                    "name": "futureResponse",
                    "description": "optional        The future response that will be augmented with the                // 580\n                                             http status code (if successful)                                   // 581"
                },
                {
                    "name": "preResponseCallback",
                    "description": "optional        Maximum number of retries                                          // 582"
                },
                {
                    "name": "retries",
                    "description": "optional        Maximum number of retries                                          // 583"
                },
                {
                    "name": "maxTimeout",
                    "description": "optional        Maximum time to wait for the location to respond                   // 584\n                                                                                                                // 585"
                },
                {
                    "name": "values",
                    "description": "Valid values.                                                                             // 619",
                    "type": "Array"
                },
                {
                    "name": "config",
                    "description": "See `registerTestingFramework`.                                                         // 645",
                    "type": "Object"
                },
                {
                    "name": "config",
                    "description": "See `registerTestingFramework`.                                                         // 724",
                    "type": "Object"
                },
                {
                    "name": "options",
                    "description": "// 14",
                    "type": "Object",
                    "props": [
                        {
                            "name": "",
                            "description": "The name of the target framework                                          // 15\n                                        for which the tests should be copied                                      // 16\n                                        to the mirror.                                                            // 17",
                            "type": "String"
                        },
                        {
                            "name": "",
                            "description": "Callback that is called after a                                           // 18\n                                        file was added.                                                           // 19",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "",
                            "description": "Callback that is called after a                                         // 20\n                                          file has changed.                                                       // 21",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "",
                            "description": "Callback that is called after a                                         // 22\n                                          file was removed.                                                       // 23",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "",
                            "description": "Control whether a file is copied.                                          // 24\n                                       Passed the file object from the                                            // 25\n                                       VelocityTestFiles collection which                                         // 26\n                                       has a `absolutePath` field.                                                // 27\n                                       Default: true                                                              // 28",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "",
                            "description": "A function that converts the                              // 29\n                                                        test file path to the mirror path.                        // 30\n                                                                                                                  // 31",
                            "type": "Function",
                            "optional": true
                        }
                    ]
                }
            ],
            "type": "// 204!~YUIDOC_LINE~!     _reset(_config);                                                                                               // 205!~YUIDOC_LINE~!",
            "return": {
                "description": "// 620",
                "type": "*"
            },
            "access": "private",
            "tagname": "// 830\n/                                                                                                                // 831\n function _syncMirror () {                                                                                          // 832\n   var cmd = new Rsync()                                                                                            // 833\n     .shell('ssh')                                                                                                  // 834\n     .flags('av')                                                                                                   // 835\n     .set('delete')                                                                                                 // 836\n     .set('q')                                                                                                      // 837\n     .set('delay-updates')                                                                                          // 838\n     .set('force')                                                                                                  // 839\n     .exclude('.meteor/local')                                                                                      // 840\n     .exclude('tests/.*')                                                                                           // 841\n     .source(process.env.PWD + path.sep)                                                                            // 842\n     .destination(Velocity.getMirrorPath());                                                                        // 843\n   var then = Date.now();                                                                                           // 844\n   cmd.execute(Meteor.bindEnvironment(function (error) {                                                            // 845\n                                                                                                                    // 846\n     if (error) {                                                                                                   // 847\n       DEBUG && console.error('[velocity] Error syncing mirror', error);                                            // 848\n     } else {                                                                                                       // 849\n       DEBUG && console.log('[velocity] rsync took', Date.now() - then);                                            // 850\n     }                                                                                                              // 851\n                                                                                                                    // 852\n     _.each(_preProcessors, function (preProcessor) {                                                               // 853\n       preProcessor();                                                                                              // 854\n     });                                                                                                            // 855\n                                                                                                                    // 856\n     VelocityFixtureFiles.find({}).forEach(function (fixture) {                                                     // 857\n       var fixtureLocationInMirror = Velocity.getMirrorPath() + path.sep + path.basename(fixture.absolutePath) + path.extname(fixture.absolutePath);\n       DEBUG && console.log('[velocity] copying fixture', fixture.absolutePath, 'to', fixtureLocationInMirror);     // 859\n       copyFile(fixture.absolutePath, fixtureLocationInMirror);                                                     // 860\n     });                                                                                                            // 861\n                                                                                                                    // 862\n     // TODO remove this once jasmine and mocha-web are using the velocityStartMirror                               // 863\n     Meteor.call('velocityStartMirror', {                                                                           // 864\n       name: 'mocha-web',                                                                                           // 865\n       port: 5000                                                                                                   // 866\n     }, function (e, r) {                                                                                           // 867\n       if (e) {                                                                                                     // 868\n         console.error('[velocity] mirror failed to start', e);                                                     // 869\n       } else {                                                                                                     // 870\n         console.log('[velocity] Mirror started', r);                                                               // 871\n       }                                                                                                            // 872\n     });                                                                                                            // 873\n                                                                                                                    // 874\n   }));                                                                                                             // 875\n }                                                                                                                  // 876\n                                                                                                                    // 877\n})();                                                                                                                // 878\n                                                                                                                    // 879\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/velocity:core/lib/FileCopier.js                                                                          //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\n'use strict';                                                                                                        // 1\n                                                                                                                    // 2\nvar _ = Npm.require('lodash');                                                                                       // 3\nvar path = Npm.require('path');                                                                                      // 4\nvar fs = Npm.require('fs-extra');                                                                                    // 5\nvar removeFile = Meteor._wrapAsync(fs.remove);                                                                       // 6\nvar copyFile = Meteor._wrapAsync(fs.copy);                                                                           // 7\n                                                                                                                    // 8\n/**                                                                                                                  // 9\nWorker that copies test files to the mirror reactively.                                                           // 10\n                                                                                                                  // 11",
            "is_constructor": 1,
            "example": [
                "                                                                                                          // 32\n    var fileCopier = new Velocity.FileCopier({                                                                    // 33\n      targetFramework: TEST_FRAMEWORK_NAME                                                                        // 34\n    });                                                                                                           // 35\n    fileCopier.start();                                                                                           // 36\n/                                                                                                                  // 37\nVelocity.FileCopier = function VelocityFileCopier(options) {                                                         // 38\n check(options, {                                                                                                   // 39\n   targetFramework: String,                                                                                         // 40\n   onFileAdded: Match.Optional(Function),                                                                           // 41\n   onFileChanged: Match.Optional(Function),                                                                         // 42\n   onFileRemoved: Match.Optional(Function),                                                                         // 43\n   shouldCopy: Match.Optional(Function),                                                                            // 44\n   convertTestPathToMirrorPath: Match.Optional(Function)                                                            // 45\n });                                                                                                                // 46\n this.options = _.extend({                                                                                          // 47\n   onFileAdded: _.noop,                                                                                             // 48\n   onFileChanged: _.noop,                                                                                           // 49\n   onFileRemoved: _.noop,                                                                                           // 50\n   shouldCopy: function () { return true; },                                                                        // 51\n   convertTestPathToMirrorPath: this._defaultConvertTestPathToMirrorPath                                            // 52\n }, options);                                                                                                       // 53\n};                                                                                                                   // 54\n                                                                                                                    // 55\n_.extend(Velocity.FileCopier.prototype, {                                                                            // 56\n                                                                                                                    // 57\n /**                                                                                                                // 58\nStarts copying files to the mirror.                                                                             // 59\n                                                                                                                // 60"
            ],
            "memberof": "Velocity.FileCopier.prototype                                                                         // 80\n/                                                                                                                // 81\n stop: function () {                                                                                                // 82\n   this._observer.stop();                                                                                           // 83\n   this._observer = null;                                                                                           // 84\n },                                                                                                                 // 85\n                                                                                                                    // 86\n _onFileAdded: function (newFile) {                                                                                 // 87\n   if (this.options.shouldCopy(newFile)) {                                                                          // 88\n     this._replaceFileInMirror(newFile);                                                                            // 89\n     this.options.onFileAdded(newFile);                                                                             // 90\n   }                                                                                                                // 91\n },                                                                                                                 // 92\n                                                                                                                    // 93\n _onFileChanged: function (newFile, oldFile) {                                                                      // 94\n   if (this.options.shouldCopy(oldFile)) {                                                                          // 95\n     // Remove the oldFile in case the absolutePath has changed                                                     // 96\n     this._removeFileFromMirror(oldFile);                                                                           // 97\n   }                                                                                                                // 98\n   if (this.options.shouldCopy(newFile)) {                                                                          // 99\n     this._replaceFileInMirror(newFile);                                                                            // 100\n     this.options.onFileAdded(oldFile, newFile);                                                                    // 101\n   }                                                                                                                // 102\n },                                                                                                                 // 103\n                                                                                                                    // 104\n _onFileRemoved: function (removedFile) {                                                                           // 105\n   this._removeFileFromMirror(removedFile);                                                                         // 106\n   this.options.onFileRemoved(removedFile);                                                                         // 107\n },                                                                                                                 // 108\n                                                                                                                    // 109\n _removeFileFromMirror: function (file) {                                                                           // 110\n   var mirrorFilePath = this._convertTestPathToMirrorPath(file.absolutePath);                                       // 111\n   DEBUG && console.log('[Velocity.FileCopier] Remove file from mirror', mirrorFilePath);                           // 112\n   removeFile(mirrorFilePath);                                                                                      // 113\n },                                                                                                                 // 114\n                                                                                                                    // 115\n _replaceFileInMirror: function (file) {                                                                            // 116\n   var self = this;                                                                                                 // 117\n                                                                                                                    // 118\n   var mirrorFilePath = self._convertTestPathToMirrorPath(file.absolutePath);                                       // 119\n   DEBUG && console.log('[Velocity.FileCopier] Replace file in mirror', mirrorFilePath);                            // 120\n   copyFile(file.absolutePath, mirrorFilePath);                                                                     // 121\n },                                                                                                                 // 122\n                                                                                                                    // 123\n _isInTestsPath: function _isInTestsPath(filePath) {                                                                // 124\n   var testsPath = Velocity.getTestsPath();                                                                         // 125\n   return filePath.substr(0, testsPath.length) === testsPath;                                                       // 126\n },                                                                                                                 // 127\n                                                                                                                    // 128\n _convertTestPathToMirrorPath: function (filePath) {                                                                // 129\n   if (!this._isInTestsPath(filePath)) {                                                                            // 130\n     throw new Error('[Velocity.FileCopier] Path \"' + filePath + '\" is not in the tests path.');                    // 131\n   }                                                                                                                // 132\n                                                                                                                    // 133\n   filePath = filePath.substr(Velocity.getTestsPath().length);                                                      // 134\n   filePath = this.options.convertTestPathToMirrorPath.call(this, filePath);                                        // 135\n                                                                                                                    // 136\n   return Velocity.getMirrorPath() + filePath;                                                                      // 137\n },                                                                                                                 // 138\n                                                                                                                    // 139\n _defaultConvertTestPathToMirrorPath: function (filePath) {                                                         // 140\n   var targetFramework = this.options.targetFramework;                                                              // 141\n   filePath = filePath.replace(targetFramework + '/client', 'client/' + targetFramework);                           // 142\n   filePath = filePath.replace(targetFramework + '/server', 'server/' + targetFramework);                           // 143\n                                                                                                                    // 144\n   return filePath                                                                                                  // 145\n }                                                                                                                  // 146\n});                                                                                                                  // 147\n                                                                                                                    // 148\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);"
        },
        "Velocity": {
            "name": "Velocity",
            "submodules": {},
            "classes": {
                "Velocity": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "main.js",
            "line": 11
        }
    },
    "classes": {
        "Velocity                                                                                                   // 12\n/                                                                                                                  // 13\nVelocity = {};                                                                                                       // 14\n                                                                                                                    // 15\n(function () {                                                                                                       // 16\n 'use strict';                                                                                                      // 17\n                                                                                                                    // 18\n//////////////////////////////////////////////////////////////////////                                               // 19\n// Init                                                                                                              // 20\n//                                                                                                                   // 21\n                                                                                                                    // 22\n if (process.env.NODE_ENV !== 'development' || process.env.VELOCITY === '0' || process.env.IS_MIRROR) {             // 23\n   DEBUG && console.log('Not adding velocity code');                                                                // 24\n   return;                                                                                                          // 25\n }                                                                                                                  // 26\n                                                                                                                    // 27\n var isMeteor92OrNewer = function () {                                                                              // 28\n   if (Meteor.release) {                                                                                            // 29\n     var versionRegExp = /(?:METEOR@)?(\\d+)\\.(\\d+)\\.(\\d+)(?:\\.(\\d+))/;                                              // 30\n     var version = versionRegExp.exec(Meteor.release);                                                              // 31\n     if (version) {                                                                                                 // 32\n       var majorVersion = Number(version[1]);                                                                       // 33\n       var minorVersion = Number(version[2]);                                                                       // 34\n       var patchVersion = Number(version[3]);                                                                       // 35\n       if (majorVersion > 0 ||                                                                                      // 36\n         (majorVersion == 0 && minorVersion > 9) ||                                                                 // 37\n         (majorVersion == 0 && minorVersion == 9 && patchVersion >= 2)                                              // 38\n         ) {                                                                                                        // 39\n         return true;                                                                                               // 40\n       }                                                                                                            // 41\n     }                                                                                                              // 42\n   }                                                                                                                // 43\n                                                                                                                    // 44\n   return false;                                                                                                    // 45\n };                                                                                                                 // 46\n                                                                                                                    // 47\n var getAssetPath = function (packageName, fileName) {                                                              // 48\n   var serverAssetsPath = path.join(                                                                                // 49\n     process.env.PWD, '.meteor', 'local', 'build', 'programs', 'server', 'assets'                                   // 50\n   );                                                                                                               // 51\n   if (isMeteor92OrNewer()) {                                                                                       // 52\n     packageName = packageName.replace(':', '_')                                                                    // 53\n   }                                                                                                                // 54\n                                                                                                                    // 55\n   return path.join(serverAssetsPath, 'packages', packageName, fileName);                                           // 56\n };                                                                                                                 // 57\n                                                                                                                    // 58\n var _ = Npm.require('lodash'),                                                                                     // 59\n     fs = Npm.require('fs'),                                                                                        // 60\n     fse = Npm.require('fs-extra'),                                                                                 // 61\n     readFile = Meteor._wrapAsync(fs.readFile),                                                                     // 62\n     writeFile = Meteor._wrapAsync(fs.writeFile),                                                                   // 63\n     copyFile = Meteor._wrapAsync(fse.copy),                                                                        // 64\n     path = Npm.require('path'),                                                                                    // 65\n     url = Npm.require('url'),                                                                                      // 66\n     Rsync = Npm.require('rsync'),                                                                                  // 67\n     Future = Npm.require('fibers/future'),                                                                         // 68\n     freeport = Npm.require('freeport'),                                                                            // 69\n     child_process = Npm.require('child_process'),                                                                  // 70\n     spawn = child_process.spawn,                                                                                   // 71\n     chokidar = Npm.require('chokidar'),                                                                            // 72\n     glob = Npm.require('glob'),                                                                                    // 73\n     _config = {},                                                                                                  // 74\n     _preProcessors = [],                                                                                           // 75\n     _postProcessors = [],                                                                                          // 76\n     _watcher,                                                                                                      // 77\n     FIXTURE_REG_EXP = new RegExp(\"-fixture.(js|coffee)$\"),                                                         // 78\n     DEFAULT_FIXTURE_PATH = getAssetPath('velocity:core', 'default-fixture.js');                                    // 79\n                                                                                                                    // 80\n Meteor.startup(function initializeVelocity () {                                                                    // 81\n   DEBUG && console.log('[velocity] PWD', process.env.PWD);                                                         // 82\n   DEBUG && console.log('velocity config =', JSON.stringify(_config, null, 2));                                     // 83\n                                                                                                                    // 84\n   // kick-off everything                                                                                           // 85\n   _reset(_config);                                                                                                 // 86\n });                                                                                                                // 87\n                                                                                                                    // 88\n//////////////////////////////////////////////////////////////////////                                               // 89\n// Public Methods                                                                                                    // 90\n//                                                                                                                   // 91\n                                                                                                                    // 92\n _.extend(Velocity, {                                                                                               // 93\n                                                                                                                    // 94\n   getMirrorPath: function () {                                                                                     // 95\n     return path.join(process.env.PWD, '.meteor', 'local', '.mirror');                                              // 96\n   },                                                                                                               // 97\n                                                                                                                    // 98\n   getTestsPath: function () {                                                                                      // 99\n     return path.join(process.env.PWD, 'tests');                                                                    // 100\n   },                                                                                                               // 101\n                                                                                                                    // 102\n   addPreProcessor: function (preProcessor) {                                                                       // 103\n     _preProcessors.push(preProcessor);                                                                             // 104\n   },                                                                                                               // 105\n                                                                                                                    // 106\n   addPostProcessor: function (reporter) {                                                                          // 107\n     _postProcessors.push(reporter);                                                                                // 108\n   },                                                                                                               // 109\n                                                                                                                    // 110\n   getReportGithubIssueMessage: function() {                                                                        // 111\n     return \"Please report the issue here: https://github.com/xolvio/velocity/issues\";                              // 112\n   }                                                                                                                // 113\n });                                                                                                                // 114\n                                                                                                                    // 115\n if (Meteor.isServer) {                                                                                             // 116\n   _.extend(Velocity, {                                                                                             // 117\n                                                                                                                    // 118\n     /**                                                                                                            // 119\nRegisters a testing framework plugin.                                                                       // 120\n                                                                                                            // 121": {
            "name": "Velocity                                                                                                   // 12\n/                                                                                                                  // 13\nVelocity = {};                                                                                                       // 14\n                                                                                                                    // 15\n(function () {                                                                                                       // 16\n 'use strict';                                                                                                      // 17\n                                                                                                                    // 18\n//////////////////////////////////////////////////////////////////////                                               // 19\n// Init                                                                                                              // 20\n//                                                                                                                   // 21\n                                                                                                                    // 22\n if (process.env.NODE_ENV !== 'development' || process.env.VELOCITY === '0' || process.env.IS_MIRROR) {             // 23\n   DEBUG && console.log('Not adding velocity code');                                                                // 24\n   return;                                                                                                          // 25\n }                                                                                                                  // 26\n                                                                                                                    // 27\n var isMeteor92OrNewer = function () {                                                                              // 28\n   if (Meteor.release) {                                                                                            // 29\n     var versionRegExp = /(?:METEOR@)?(\\d+)\\.(\\d+)\\.(\\d+)(?:\\.(\\d+))/;                                              // 30\n     var version = versionRegExp.exec(Meteor.release);                                                              // 31\n     if (version) {                                                                                                 // 32\n       var majorVersion = Number(version[1]);                                                                       // 33\n       var minorVersion = Number(version[2]);                                                                       // 34\n       var patchVersion = Number(version[3]);                                                                       // 35\n       if (majorVersion > 0 ||                                                                                      // 36\n         (majorVersion == 0 && minorVersion > 9) ||                                                                 // 37\n         (majorVersion == 0 && minorVersion == 9 && patchVersion >= 2)                                              // 38\n         ) {                                                                                                        // 39\n         return true;                                                                                               // 40\n       }                                                                                                            // 41\n     }                                                                                                              // 42\n   }                                                                                                                // 43\n                                                                                                                    // 44\n   return false;                                                                                                    // 45\n };                                                                                                                 // 46\n                                                                                                                    // 47\n var getAssetPath = function (packageName, fileName) {                                                              // 48\n   var serverAssetsPath = path.join(                                                                                // 49\n     process.env.PWD, '.meteor', 'local', 'build', 'programs', 'server', 'assets'                                   // 50\n   );                                                                                                               // 51\n   if (isMeteor92OrNewer()) {                                                                                       // 52\n     packageName = packageName.replace(':', '_')                                                                    // 53\n   }                                                                                                                // 54\n                                                                                                                    // 55\n   return path.join(serverAssetsPath, 'packages', packageName, fileName);                                           // 56\n };                                                                                                                 // 57\n                                                                                                                    // 58\n var _ = Npm.require('lodash'),                                                                                     // 59\n     fs = Npm.require('fs'),                                                                                        // 60\n     fse = Npm.require('fs-extra'),                                                                                 // 61\n     readFile = Meteor._wrapAsync(fs.readFile),                                                                     // 62\n     writeFile = Meteor._wrapAsync(fs.writeFile),                                                                   // 63\n     copyFile = Meteor._wrapAsync(fse.copy),                                                                        // 64\n     path = Npm.require('path'),                                                                                    // 65\n     url = Npm.require('url'),                                                                                      // 66\n     Rsync = Npm.require('rsync'),                                                                                  // 67\n     Future = Npm.require('fibers/future'),                                                                         // 68\n     freeport = Npm.require('freeport'),                                                                            // 69\n     child_process = Npm.require('child_process'),                                                                  // 70\n     spawn = child_process.spawn,                                                                                   // 71\n     chokidar = Npm.require('chokidar'),                                                                            // 72\n     glob = Npm.require('glob'),                                                                                    // 73\n     _config = {},                                                                                                  // 74\n     _preProcessors = [],                                                                                           // 75\n     _postProcessors = [],                                                                                          // 76\n     _watcher,                                                                                                      // 77\n     FIXTURE_REG_EXP = new RegExp(\"-fixture.(js|coffee)$\"),                                                         // 78\n     DEFAULT_FIXTURE_PATH = getAssetPath('velocity:core', 'default-fixture.js');                                    // 79\n                                                                                                                    // 80\n Meteor.startup(function initializeVelocity () {                                                                    // 81\n   DEBUG && console.log('[velocity] PWD', process.env.PWD);                                                         // 82\n   DEBUG && console.log('velocity config =', JSON.stringify(_config, null, 2));                                     // 83\n                                                                                                                    // 84\n   // kick-off everything                                                                                           // 85\n   _reset(_config);                                                                                                 // 86\n });                                                                                                                // 87\n                                                                                                                    // 88\n//////////////////////////////////////////////////////////////////////                                               // 89\n// Public Methods                                                                                                    // 90\n//                                                                                                                   // 91\n                                                                                                                    // 92\n _.extend(Velocity, {                                                                                               // 93\n                                                                                                                    // 94\n   getMirrorPath: function () {                                                                                     // 95\n     return path.join(process.env.PWD, '.meteor', 'local', '.mirror');                                              // 96\n   },                                                                                                               // 97\n                                                                                                                    // 98\n   getTestsPath: function () {                                                                                      // 99\n     return path.join(process.env.PWD, 'tests');                                                                    // 100\n   },                                                                                                               // 101\n                                                                                                                    // 102\n   addPreProcessor: function (preProcessor) {                                                                       // 103\n     _preProcessors.push(preProcessor);                                                                             // 104\n   },                                                                                                               // 105\n                                                                                                                    // 106\n   addPostProcessor: function (reporter) {                                                                          // 107\n     _postProcessors.push(reporter);                                                                                // 108\n   },                                                                                                               // 109\n                                                                                                                    // 110\n   getReportGithubIssueMessage: function() {                                                                        // 111\n     return \"Please report the issue here: https://github.com/xolvio/velocity/issues\";                              // 112\n   }                                                                                                                // 113\n });                                                                                                                // 114\n                                                                                                                    // 115\n if (Meteor.isServer) {                                                                                             // 116\n   _.extend(Velocity, {                                                                                             // 117\n                                                                                                                    // 118\n     /**                                                                                                            // 119\nRegisters a testing framework plugin.                                                                       // 120\n                                                                                                            // 121",
            "shortname": "Velocity                                                                                                   // 12\n/                                                                                                                  // 13\nVelocity = {};                                                                                                       // 14\n                                                                                                                    // 15\n(function () {                                                                                                       // 16\n 'use strict';                                                                                                      // 17\n                                                                                                                    // 18\n//////////////////////////////////////////////////////////////////////                                               // 19\n// Init                                                                                                              // 20\n//                                                                                                                   // 21\n                                                                                                                    // 22\n if (process.env.NODE_ENV !== 'development' || process.env.VELOCITY === '0' || process.env.IS_MIRROR) {             // 23\n   DEBUG && console.log('Not adding velocity code');                                                                // 24\n   return;                                                                                                          // 25\n }                                                                                                                  // 26\n                                                                                                                    // 27\n var isMeteor92OrNewer = function () {                                                                              // 28\n   if (Meteor.release) {                                                                                            // 29\n     var versionRegExp = /(?:METEOR@)?(\\d+)\\.(\\d+)\\.(\\d+)(?:\\.(\\d+))/;                                              // 30\n     var version = versionRegExp.exec(Meteor.release);                                                              // 31\n     if (version) {                                                                                                 // 32\n       var majorVersion = Number(version[1]);                                                                       // 33\n       var minorVersion = Number(version[2]);                                                                       // 34\n       var patchVersion = Number(version[3]);                                                                       // 35\n       if (majorVersion > 0 ||                                                                                      // 36\n         (majorVersion == 0 && minorVersion > 9) ||                                                                 // 37\n         (majorVersion == 0 && minorVersion == 9 && patchVersion >= 2)                                              // 38\n         ) {                                                                                                        // 39\n         return true;                                                                                               // 40\n       }                                                                                                            // 41\n     }                                                                                                              // 42\n   }                                                                                                                // 43\n                                                                                                                    // 44\n   return false;                                                                                                    // 45\n };                                                                                                                 // 46\n                                                                                                                    // 47\n var getAssetPath = function (packageName, fileName) {                                                              // 48\n   var serverAssetsPath = path.join(                                                                                // 49\n     process.env.PWD, '.meteor', 'local', 'build', 'programs', 'server', 'assets'                                   // 50\n   );                                                                                                               // 51\n   if (isMeteor92OrNewer()) {                                                                                       // 52\n     packageName = packageName.replace(':', '_')                                                                    // 53\n   }                                                                                                                // 54\n                                                                                                                    // 55\n   return path.join(serverAssetsPath, 'packages', packageName, fileName);                                           // 56\n };                                                                                                                 // 57\n                                                                                                                    // 58\n var _ = Npm.require('lodash'),                                                                                     // 59\n     fs = Npm.require('fs'),                                                                                        // 60\n     fse = Npm.require('fs-extra'),                                                                                 // 61\n     readFile = Meteor._wrapAsync(fs.readFile),                                                                     // 62\n     writeFile = Meteor._wrapAsync(fs.writeFile),                                                                   // 63\n     copyFile = Meteor._wrapAsync(fse.copy),                                                                        // 64\n     path = Npm.require('path'),                                                                                    // 65\n     url = Npm.require('url'),                                                                                      // 66\n     Rsync = Npm.require('rsync'),                                                                                  // 67\n     Future = Npm.require('fibers/future'),                                                                         // 68\n     freeport = Npm.require('freeport'),                                                                            // 69\n     child_process = Npm.require('child_process'),                                                                  // 70\n     spawn = child_process.spawn,                                                                                   // 71\n     chokidar = Npm.require('chokidar'),                                                                            // 72\n     glob = Npm.require('glob'),                                                                                    // 73\n     _config = {},                                                                                                  // 74\n     _preProcessors = [],                                                                                           // 75\n     _postProcessors = [],                                                                                          // 76\n     _watcher,                                                                                                      // 77\n     FIXTURE_REG_EXP = new RegExp(\"-fixture.(js|coffee)$\"),                                                         // 78\n     DEFAULT_FIXTURE_PATH = getAssetPath('velocity:core', 'default-fixture.js');                                    // 79\n                                                                                                                    // 80\n Meteor.startup(function initializeVelocity () {                                                                    // 81\n   DEBUG && console.log('[velocity] PWD', process.env.PWD);                                                         // 82\n   DEBUG && console.log('velocity config =', JSON.stringify(_config, null, 2));                                     // 83\n                                                                                                                    // 84\n   // kick-off everything                                                                                           // 85\n   _reset(_config);                                                                                                 // 86\n });                                                                                                                // 87\n                                                                                                                    // 88\n//////////////////////////////////////////////////////////////////////                                               // 89\n// Public Methods                                                                                                    // 90\n//                                                                                                                   // 91\n                                                                                                                    // 92\n _.extend(Velocity, {                                                                                               // 93\n                                                                                                                    // 94\n   getMirrorPath: function () {                                                                                     // 95\n     return path.join(process.env.PWD, '.meteor', 'local', '.mirror');                                              // 96\n   },                                                                                                               // 97\n                                                                                                                    // 98\n   getTestsPath: function () {                                                                                      // 99\n     return path.join(process.env.PWD, 'tests');                                                                    // 100\n   },                                                                                                               // 101\n                                                                                                                    // 102\n   addPreProcessor: function (preProcessor) {                                                                       // 103\n     _preProcessors.push(preProcessor);                                                                             // 104\n   },                                                                                                               // 105\n                                                                                                                    // 106\n   addPostProcessor: function (reporter) {                                                                          // 107\n     _postProcessors.push(reporter);                                                                                // 108\n   },                                                                                                               // 109\n                                                                                                                    // 110\n   getReportGithubIssueMessage: function() {                                                                        // 111\n     return \"Please report the issue here: https://github.com/xolvio/velocity/issues\";                              // 112\n   }                                                                                                                // 113\n });                                                                                                                // 114\n                                                                                                                    // 115\n if (Meteor.isServer) {                                                                                             // 116\n   _.extend(Velocity, {                                                                                             // 117\n                                                                                                                    // 118\n     /**                                                                                                            // 119\nRegisters a testing framework plugin.                                                                       // 120\n                                                                                                            // 121",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Velocity                                                                                                  // 9\n/                                                                                                                  // 10\n/**                                                                                                                  // 11",
            "namespace": "",
            "file": ".build10059..build.velocity:core/os.osx.x86_64/packages/velocity:core.js",
            "line": 85
        },
        "FileCopier                                                                                                 // 12": {
            "name": "_syncMirror                                                                                             // 812",
            "shortname": "FileCopier                                                                                                 // 12",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Velocity                                                                                                  // 9\n/                                                                                                                  // 10\n/**                                                                                                                  // 11",
            "namespace": "",
            "file": ".build10059..build.velocity:core/os.osx.x86_64/packages/velocity:core.js",
            "line": 85,
            "itemtype": "method",
            "params": [
                {
                    "name": "name",
                    "description": "The name of the testing framework.                                                     // 123",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "Options for the testing framework.                                                // 124",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "regex",
                            "description": "The regular expression for                                                  // 125\n                                test files that should be assigned                                          // 126\n                                to the testing framework.                                                   // 127\n                                The path relative to the tests                                              // 128\n                                folder is matched against it.                                               // 129\n                                The default is \"name/.+\\.js$\"                                               // 130\n                                (name is the testing framework name).                                       // 131\n/                                                                                                            // 132\n     registerTestingFramework: function (name, options) {                                                           // 133\n       _config[name] = _parseTestingFrameworkOptions(name, options);                                                // 134\n     },                                                                                                             // 135\n     parseXmlFiles: function  (selectedFramework){                                                                  // 136\n        var closeFunc = Meteor.bindEnvironment(function () {                                                        // 137\n          console.log('binding environment and parsing output xml files...')                                        // 138\n                                                                                                                    // 139\n           function hashCode (s) {                                                                                  // 140\n             return s.split(\"\").reduce(function (a, b) {                                                            // 141\n               a = ((a << 5) - a) + b.charCodeAt(0);                                                                // 142\n               return a & a;                                                                                        // 143\n             }, 0);                                                                                                 // 144\n           }                                                                                                        // 145\n                                                                                                                    // 146\n          var newResults = [];                                                                                      // 147\n          //var globSearchString = parsePath('**/FIREFOX*.xml');                                                    // 148\n          var globSearchString = path.join('**', 'FIREFOX_*.xml');                                                  // 149\n          var xmlFiles = glob.sync(globSearchString, { cwd: testReportsPath });                                     // 150\n                                                                                                                    // 151\n          console.log('globSearchString', globSearchString);                                                        // 152\n                                                                                                                    // 153\n          _.each(xmlFiles, function (xmlFile, index) {                                                              // 154\n            parseString(fs.readFileSync(testReportsPath + path.sep + xmlFile), function (err, result) {             // 155\n              _.each(result.testsuites.testsuite, function (testsuite) {                                            // 156\n                _.each(testsuite.testcase, function (testcase) {                                                    // 157\n                  var result = ({                                                                                   // 158\n                    name: testcase.$.name,                                                                          // 159\n                    framework: selectedFramework,                                                                   // 160\n                    result: testcase.failure ? 'failed' : 'passed',                                                 // 161\n                    timestamp: testsuite.$.timestamp,                                                               // 162\n                    time: testcase.$.time,                                                                          // 163\n                    ancestors: [testcase.$.classname]                                                               // 164\n                  });                                                                                               // 165\n                                                                                                                    // 166\n                  if (testcase.failure) {                                                                           // 167\n                    _.each(testcase.failure, function (failure) {                                                   // 168\n                      result.failureType = failure.$.type;                                                          // 169\n                      result.failureMessage = failure.$.message;                                                    // 170\n                      result.failureStackTrace = failure._;                                                         // 171\n                    });                                                                                             // 172\n                  }                                                                                                 // 173\n                  result.id = selectedFramework + ':' + hashCode(xmlFile + testcase.$.classname + testcase.$.name); // 174\n                  newResults.push(result.id);                                                                       // 175\n                  console.log('result', result);                                                                    // 176\n                  Meteor.call('postResult', result);                                                                // 177\n                });                                                                                                 // 178\n              });                                                                                                   // 179\n            });                                                                                                     // 180\n                                                                                                                    // 181\n            if (index === xmlFiles.length - 1) {                                                                    // 182\n              Meteor.call('resetReports', {framework: selectedFramework, notIn: newResults});                       // 183\n              Meteor.call('completed', {framework: selectedFramework});                                             // 184\n            }                                                                                                       // 185\n          });                                                                                                       // 186\n        });                                                                                                         // 187\n     }                                                                                                              // 188\n   });                                                                                                              // 189\n }                                                                                                                  // 190\n                                                                                                                    // 191\n//////////////////////////////////////////////////////////////////////                                               // 192\n// Meteor Methods                                                                                                    // 193\n//                                                                                                                   // 194\n                                                                                                                    // 195\n Meteor.methods({                                                                                                   // 196\n                                                                                                                    // 197\n   /**                                                                                                              // 198\nMeteor method: reset                                                                                          // 199\nRe-init file watcher and clear all test results.                                                              // 200\n                                                                                                              // 201",
                            "type": "String",
                            "optional": true
                        }
                    ]
                },
                {
                    "name": "options",
                    "description": "Optional, specify specific framework to clear                                       // 213\n                and/or define a list of tests to keep.                                                        // 214\n                ex.                                                                                           // 215\n                {                                                                                             // 216\n                  framework: 'jasmine-unit',                                                                  // 217\n                  notIn: ['tests/auth-jasmine-unit.js']                                                       // 218\n                }                                                                                             // 219\n/                                                                                                              // 220\n   resetReports: function (options) {                                                                               // 221\n     options = options || {};                                                                                       // 222\n     check(options, {                                                                                               // 223\n       framework: Match.Optional(String),                                                                           // 224\n       notIn: Match.Optional([String])                                                                              // 225\n     });                                                                                                            // 226\n                                                                                                                    // 227\n     var query = {};                                                                                                // 228\n     if (options.framework) {                                                                                       // 229\n       query.framework = options.framework;                                                                         // 230\n     }                                                                                                              // 231\n     if (options.notIn) {                                                                                           // 232\n       query = _.assign(query, {_id: {$nin: options.notIn }});                                                      // 233\n     }                                                                                                              // 234\n     VelocityTestReports.remove(query);                                                                             // 235\n     _updateAggregateReports();                                                                                     // 236\n   },                                                                                                               // 237\n                                                                                                                    // 238\n   /**                                                                                                              // 239\nMeteor method: resetLogs                                                                                      // 240\nClear all log entried.                                                                                        // 241\n                                                                                                              // 242",
                    "type": "Object",
                    "optional": true,
                    "props": []
                },
                {
                    "name": "options",
                    "description": "Optional, specify specific framework to clear                                       // 244\n/                                                                                                              // 245\n   resetLogs: function (options) {                                                                                  // 246\n     options = options || {};                                                                                       // 247\n     check(options, {                                                                                               // 248\n       framework: Match.Optional(String)                                                                            // 249\n     });                                                                                                            // 250\n                                                                                                                    // 251\n     var query = {};                                                                                                // 252\n     if (options.framework) {                                                                                       // 253\n       query.framework = options.framework;                                                                         // 254\n     }                                                                                                              // 255\n     VelocityLogs.remove(query);                                                                                    // 256\n   },                                                                                                               // 257\n                                                                                                                    // 258\n   /**                                                                                                              // 259\nMeteor method: postLog                                                                                        // 260\nLog a method to the central Velocity log store.                                                               // 261\n                                                                                                              // 262",
                    "type": "Object",
                    "optional": true,
                    "props": []
                },
                {
                    "name": "options",
                    "description": "Required parameters:                                                                  // 264\n                  type - String                                                                               // 265\n                  message - String                                                                            // 266\n                  framework - String  ex. 'jasmine-unit'                                                      // 267\n                                                                                                              // 268\n                Optional parameters:                                                                          // 269\n                  timestamp - Date                                                                            // 270\n/                                                                                                              // 271\n   postLog: function (options) {                                                                                    // 272\n     check(options, {                                                                                               // 273\n       type: String,                                                                                                // 274\n       message: String,                                                                                             // 275\n       framework: String,                                                                                           // 276\n       timestamp: Match.Optional(Match.OneOf(Date, String))                                                         // 277\n     });                                                                                                            // 278\n                                                                                                                    // 279\n     VelocityLogs.insert({                                                                                          // 280\n       timestamp: options.timestamp || new Date(),                                                                  // 281\n       type: options.type,                                                                                          // 282\n       message: options.message,                                                                                    // 283\n       framework: options.framework                                                                                 // 284\n     });                                                                                                            // 285\n   },                                                                                                               // 286\n                                                                                                                    // 287\n   /**                                                                                                              // 288\nMeteor method: postResult                                                                                     // 289\nRecord the results of a test run.                                                                             // 290\n                                                                                                              // 291",
                    "type": "Object",
                    "props": []
                },
                {
                    "name": "data",
                    "description": "Required fields:                                                                         // 293\n                  id - String                                                                                 // 294\n                  name - String                                                                               // 295\n                  framework - String  ex. 'jasmine-unit'                                                      // 296\n                  result - String.  ex. 'failed', 'passed' or 'pending'                                       // 297\n                                                                                                              // 298\n                Suggested fields:                                                                             // 299\n                  isClient - {Boolean] Is it a client test?                                                   // 300\n                  isServer - {Boolean} Is it a server test?                                                   // 301\n                  browser  - {String} In which browser did the test run?                                      // 302\n                  timestamp - {Date} The time that the test started for this result                           // 303\n                  async - // TODO @rissem to write                                                            // 304\n                  timeOut - // TODO @rissem to write                                                          // 305\n                  failureType - {String} ex 'expect' or 'assert'                                              // 306\n                  failureMessage - {String} The failure message from the test framework                       // 307\n                  failureStackTrace - {String} The stack trace associated with the failure                    // 308\n                  ancestors - The hierarchy of suites and blocks above this test                              // 309\n                              ex. 'Template.leaderboard.selected_name'                                        // 310\n/                                                                                                              // 311\n   postResult: function (data) {                                                                                    // 312\n     // Nightwatch doesn't return failureType, failureMessage, feailureStackTrace, or ancestors                     // 313\n     // we can't assume that a test framework will have that informationPhoenix42                                   // 314\n     check(data, Match.ObjectIncluding({                                                                            // 315\n       id: String,                                                                                                  // 316\n       name: String,                                                                                                // 317\n       framework: _matchOneOf(_.keys(_config)),                                                                     // 318\n       result: _matchOneOf(['passed', 'failed', 'pending']),                                                        // 319\n       isClient: Match.Optional(Boolean),                                                                           // 320\n       isServer: Match.Optional(Boolean),                                                                           // 321\n       browser: Match.Optional(_matchOneOf(['chrome', 'firefox', 'internet explorer', 'opera', 'safari'])), // TODO: Add missing values\n       timestamp: Match.Optional(Match.OneOf(Date, String)),                                                        // 323\n       async: Match.Optional(Boolean),                                                                              // 324\n       timeOut: Match.Optional(Match.Any)                                                                           // 325\n       //failureType: Match.Optional(String),                                                                       // 326\n       //failureMessage: Match.Optional(String),                                                                    // 327\n       //failureStackTrace: Match.Optional(Match.Any),                                                              // 328\n       //ancestors: Match.Optional([String])                                                                        // 329\n     }));                                                                                                           // 330\n                                                                                                                    // 331\n     VelocityTestReports.upsert(data.id, {$set: data});                                                             // 332\n     _updateAggregateReports();                                                                                     // 333\n   },  // end postResult                                                                                            // 334\n                                                                                                                    // 335\n   /**                                                                                                              // 336\nMeteor method: completed                                                                                      // 337\nFrameworks must call this method to inform Velocity they have completed                                       // 338\ntheir current test runs. Velocity uses this flag when running in CI mode.                                     // 339\n                                                                                                              // 340",
                    "type": "Object"
                },
                {
                    "name": "data",
                    "description": "Required fields:                                                                         // 342\n                  framework - String  ex. 'jasmine-unit'                                                      // 343\n/                                                                                                              // 344\n   completed: function (data) {                                                                                     // 345\n     check(data, {                                                                                                  // 346\n       framework: String                                                                                            // 347\n     });                                                                                                            // 348\n                                                                                                                    // 349\n     VelocityAggregateReports.upsert({'name': data.framework}, {$set: {'result': 'completed'}});                    // 350\n     _updateAggregateReports();                                                                                     // 351\n   },  // end completed                                                                                             // 352\n                                                                                                                    // 353\n   /**                                                                                                              // 354\nMeteor method: copySampleTests                                                                                // 355\nCopy sample tests from frameworks `sample-tests` directories                                                  // 356\nto user's `app/tests` directory.                                                                              // 357\n                                                                                                              // 358",
                    "type": "Object"
                },
                {
                    "name": "options",
                    "description": "// 360\n    ex. {framework: 'jasmine-unit'}                                                                           // 361\n/                                                                                                              // 362\n   copySampleTests: function (options) {                                                                            // 363\n     var pwd = process.env.PWD,                                                                                     // 364\n         samplesPath,                                                                                               // 365\n         testsPath,                                                                                                 // 366\n         command;                                                                                                   // 367\n                                                                                                                    // 368\n     options = options || {};                                                                                       // 369\n     check(options, {                                                                                               // 370\n       framework: String                                                                                            // 371\n     });                                                                                                            // 372\n                                                                                                                    // 373\n     samplesPath = path.join(pwd, 'packages', options.framework, 'sample-tests');                                   // 374\n     testsPath = path.join(pwd, 'tests');                                                                           // 375\n                                                                                                                    // 376\n     DEBUG && console.log('[velocity] checking for sample tests in', path.join(samplesPath, '*'));                  // 377\n                                                                                                                    // 378\n     if (fs.existsSync(samplesPath)) {                                                                              // 379\n       command = 'mkdir -p ' + testsPath + ' && ' +                                                                 // 380\n         'rsync -au ' + path.join(samplesPath, '*') +                                                               // 381\n         ' ' + testsPath + path.sep;                                                                                // 382\n                                                                                                                    // 383\n       DEBUG && console.log('[velocity] copying sample tests (if any) for framework', options.framework, '-', command);\n                                                                                                                    // 385\n       child_process.exec(command, Meteor.bindEnvironment(                                                          // 386\n         function copySampleTestsExecHandler (err, stdout, stderr) {                                                // 387\n           if (err) {                                                                                               // 388\n             console.log('ERROR', err);                                                                             // 389\n           }                                                                                                        // 390\n           console.log(stdout);                                                                                     // 391\n           console.log(stderr);                                                                                     // 392\n         },                                                                                                         // 393\n         'copySampleTestsExecHandler'                                                                               // 394\n       ));                                                                                                          // 395\n     }                                                                                                              // 396\n   },  // end copySampleTests                                                                                       // 397\n                                                                                                                    // 398\n   /**                                                                                                              // 399\nMeteor method: velocityStartMirror                                                                            // 400\n                                                                                                              // 401\nStarts a mirror and copies any specified fixture files into the mirror.                                       // 402\nTODO and will remove any registered frameworks and reporters from the mirror                                  // 403\n                                                                                                              // 404",
                    "type": "Object",
                    "props": []
                },
                {
                    "name": "options",
                    "description": "Required fields:                                                                      // 406\n                  name - String ex. 'mocha-web-1'                                                             // 407\n                                                                                                              // 408\n                Optional parameters:                                                                          // 409\n                  fixtureFiles - Array of files with absolute paths                                           // 410\n                  port - String use a specific port instead of finding the next available one                 // 411\n                                                                                                              // 412",
                    "type": "Object",
                    "props": []
                },
                {
                    "name": "database",
                    "description": "// 523"
                },
                {
                    "name": "port",
                    "description": "Mirror port                                                                                         // 541"
                },
                {
                    "name": "fixtureFiles",
                    "description": "Array with fixture file paths.                                                              // 559"
                },
                {
                    "name": "url",
                    "description": "requiredFields  The target location                                                // 577\n                                                                                                                // 578"
                },
                {
                    "name": "futureResponse",
                    "description": "optional        The future response that will be augmented with the                // 579\n                                             http status code (if successful)                                   // 580"
                },
                {
                    "name": "preResponseCallback",
                    "description": "optional        Maximum number of retries                                          // 581"
                },
                {
                    "name": "retries",
                    "description": "optional        Maximum number of retries                                          // 582"
                },
                {
                    "name": "maxTimeout",
                    "description": "optional        Maximum time to wait for the location to respond                   // 583\n                                                                                                                // 584"
                },
                {
                    "name": "values",
                    "description": "Valid values.                                                                             // 618",
                    "type": "Array"
                },
                {
                    "name": "config",
                    "description": "See `registerTestingFramework`.                                                         // 644",
                    "type": "Object"
                },
                {
                    "name": "config",
                    "description": "See `registerTestingFramework`.                                                         // 723",
                    "type": "Object"
                },
                {
                    "name": "options",
                    "description": "// 14",
                    "type": "Object",
                    "props": [
                        {
                            "name": "",
                            "description": "The name of the target framework                                          // 15\n                                        for which the tests should be copied                                      // 16\n                                        to the mirror.                                                            // 17",
                            "type": "String"
                        },
                        {
                            "name": "",
                            "description": "Callback that is called after a                                           // 18\n                                        file was added.                                                           // 19",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "",
                            "description": "Callback that is called after a                                         // 20\n                                          file has changed.                                                       // 21",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "",
                            "description": "Callback that is called after a                                         // 22\n                                          file was removed.                                                       // 23",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "",
                            "description": "Control whether a file is copied.                                          // 24\n                                       Passed the file object from the                                            // 25\n                                       VelocityTestFiles collection which                                         // 26\n                                       has a `absolutePath` field.                                                // 27\n                                       Default: true                                                              // 28\n                                                                                                                  // 29",
                            "type": "Function",
                            "optional": true
                        }
                    ]
                }
            ],
            "type": "// 204!~YUIDOC_LINE~!     _reset(_config);                                                                                               // 205!~YUIDOC_LINE~!",
            "return": {
                "description": "// 619",
                "type": "*"
            },
            "access": "private",
            "tagname": "// 813\n/                                                                                                                // 814\n function _syncMirror () {                                                                                          // 815\n   var cmd = new Rsync()                                                                                            // 816\n     .shell('ssh')                                                                                                  // 817\n     .flags('av')                                                                                                   // 818\n     .set('delete')                                                                                                 // 819\n     .set('q')                                                                                                      // 820\n     .set('delay-updates')                                                                                          // 821\n     .set('force')                                                                                                  // 822\n     .exclude('.meteor/local')                                                                                      // 823\n     .exclude('tests/.*')                                                                                           // 824\n     .source(process.env.PWD + path.sep)                                                                            // 825\n     .destination(Velocity.getMirrorPath());                                                                        // 826\n   var then = Date.now();                                                                                           // 827\n   cmd.execute(Meteor.bindEnvironment(function (error) {                                                            // 828\n                                                                                                                    // 829\n     if (error) {                                                                                                   // 830\n       DEBUG && console.error('[velocity] Error syncing mirror', error);                                            // 831\n     } else {                                                                                                       // 832\n       DEBUG && console.log('[velocity] rsync took', Date.now() - then);                                            // 833\n     }                                                                                                              // 834\n                                                                                                                    // 835\n     _.each(_preProcessors, function (preProcessor) {                                                               // 836\n       preProcessor();                                                                                              // 837\n     });                                                                                                            // 838\n                                                                                                                    // 839\n     VelocityFixtureFiles.find({}).forEach(function (fixture) {                                                     // 840\n       var fixtureLocationInMirror = Velocity.getMirrorPath() + path.sep + path.basename(fixture.absolutePath) + path.extname(fixture.absolutePath);\n       DEBUG && console.log('[velocity] copying fixture', fixture.absolutePath, 'to', fixtureLocationInMirror);     // 842\n       copyFile(fixture.absolutePath, fixtureLocationInMirror);                                                     // 843\n     });                                                                                                            // 844\n                                                                                                                    // 845\n     // TODO remove this once jasmine and mocha-web are using the velocityStartMirror                               // 846\n     Meteor.call('velocityStartMirror', {                                                                           // 847\n       name: 'mocha-web',                                                                                           // 848\n       port: 5000                                                                                                   // 849\n     }, function (e, r) {                                                                                           // 850\n       if (e) {                                                                                                     // 851\n         console.error('[velocity] mirror failed to start', e);                                                     // 852\n       } else {                                                                                                     // 853\n         console.log('[velocity] Mirror started', r);                                                               // 854\n       }                                                                                                            // 855\n     });                                                                                                            // 856\n                                                                                                                    // 857\n   }));                                                                                                             // 858\n }                                                                                                                  // 859\n                                                                                                                    // 860\n})();                                                                                                                // 861\n                                                                                                                    // 862\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/velocity:core/lib/FileCopier.js                                                                          //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                    //\n'use strict';                                                                                                        // 1\n                                                                                                                    // 2\nvar _ = Npm.require('lodash');                                                                                       // 3\nvar path = Npm.require('path');                                                                                      // 4\nvar fs = Npm.require('fs-extra');                                                                                    // 5\nvar removeFile = Meteor._wrapAsync(fs.remove);                                                                       // 6\nvar copyFile = Meteor._wrapAsync(fs.copy);                                                                           // 7\n                                                                                                                    // 8\n/**                                                                                                                  // 9\nWorker that copies test files to the mirror reactively.                                                           // 10\n                                                                                                                  // 11"
        },
        "FileCopier": {
            "name": "FileCopier",
            "shortname": "FileCopier",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Velocity                                                                                                  // 9\n/                                                                                                                  // 10\n/**                                                                                                                  // 11",
            "namespace": "",
            "file": "lib/FileCopier.js",
            "line": 9,
            "description": "Worker that copies test files to the mirror reactively.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "targetFramework",
                            "description": "The name of the target framework\n                                        for which the tests should be copied\n                                        to the mirror.",
                            "type": "String"
                        },
                        {
                            "name": "onFileAdded",
                            "description": "Callback that is called after a \n                                        file was added.",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "onFileChanged",
                            "description": "Callback that is called after a \n                                          file has changed.",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "onFileRemoved",
                            "description": "Callback that is called after a \n                                          file was removed.",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "shouldCopy",
                            "description": "Control whether a file is copied.  \n                                       Passed the file object from the \n                                       VelocityTestFiles collection which \n                                       has a `absolutePath` field. \n                                       Default: true",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "convertTestPathToMirrorPath",
                            "description": "A function that converts the\n                                                        test file path to the mirror path.",
                            "type": "Function",
                            "optional": true
                        }
                    ]
                }
            ],
            "example": [
                "\n    var fileCopier = new Velocity.FileCopier({\n      targetFramework: TEST_FRAMEWORK_NAME\n    });\n    fileCopier.start();"
            ]
        },
        "Velocity": {
            "name": "Velocity",
            "shortname": "Velocity",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Velocity",
            "namespace": "",
            "file": "main.js",
            "line": 11
        }
    },
    "classitems": [
        {
            "file": ".build.velocity:core/os.osx.x86_64/packages/velocity:core/default-fixture.js",
            "line": 19,
            "description": "Meteor method: velocityIsMirror\nExposes the IS_MIRROR flag to mirror clients",
            "itemtype": "method",
            "name": "velocityIsMirror",
            "class": "Velocity                                                                                                   // 12\n/                                                                                                                  // 13\nVelocity = {};                                                                                                       // 14\n                                                                                                                    // 15\n(function () {                                                                                                       // 16\n 'use strict';                                                                                                      // 17\n                                                                                                                    // 18\n//////////////////////////////////////////////////////////////////////                                               // 19\n// Init                                                                                                              // 20\n//                                                                                                                   // 21\n                                                                                                                    // 22\n if (process.env.NODE_ENV !== 'development' || process.env.VELOCITY === '0' || process.env.IS_MIRROR) {             // 23\n   DEBUG && console.log('Not adding velocity code');                                                                // 24\n   return;                                                                                                          // 25\n }                                                                                                                  // 26\n                                                                                                                    // 27\n var isMeteor92OrNewer = function () {                                                                              // 28\n   if (Meteor.release) {                                                                                            // 29\n     var versionRegExp = /(?:METEOR@)?(\\d+)\\.(\\d+)\\.(\\d+)(?:\\.(\\d+))/;                                              // 30\n     var version = versionRegExp.exec(Meteor.release);                                                              // 31\n     if (version) {                                                                                                 // 32\n       var majorVersion = Number(version[1]);                                                                       // 33\n       var minorVersion = Number(version[2]);                                                                       // 34\n       var patchVersion = Number(version[3]);                                                                       // 35\n       if (majorVersion > 0 ||                                                                                      // 36\n         (majorVersion == 0 && minorVersion > 9) ||                                                                 // 37\n         (majorVersion == 0 && minorVersion == 9 && patchVersion >= 2)                                              // 38\n         ) {                                                                                                        // 39\n         return true;                                                                                               // 40\n       }                                                                                                            // 41\n     }                                                                                                              // 42\n   }                                                                                                                // 43\n                                                                                                                    // 44\n   return false;                                                                                                    // 45\n };                                                                                                                 // 46\n                                                                                                                    // 47\n var getAssetPath = function (packageName, fileName) {                                                              // 48\n   var serverAssetsPath = path.join(                                                                                // 49\n     process.env.PWD, '.meteor', 'local', 'build', 'programs', 'server', 'assets'                                   // 50\n   );                                                                                                               // 51\n   if (isMeteor92OrNewer()) {                                                                                       // 52\n     packageName = packageName.replace(':', '_')                                                                    // 53\n   }                                                                                                                // 54\n                                                                                                                    // 55\n   return path.join(serverAssetsPath, 'packages', packageName, fileName);                                           // 56\n };                                                                                                                 // 57\n                                                                                                                    // 58\n var _ = Npm.require('lodash'),                                                                                     // 59\n     fs = Npm.require('fs'),                                                                                        // 60\n     fse = Npm.require('fs-extra'),                                                                                 // 61\n     readFile = Meteor._wrapAsync(fs.readFile),                                                                     // 62\n     writeFile = Meteor._wrapAsync(fs.writeFile),                                                                   // 63\n     copyFile = Meteor._wrapAsync(fse.copy),                                                                        // 64\n     path = Npm.require('path'),                                                                                    // 65\n     url = Npm.require('url'),                                                                                      // 66\n     Rsync = Npm.require('rsync'),                                                                                  // 67\n     Future = Npm.require('fibers/future'),                                                                         // 68\n     freeport = Npm.require('freeport'),                                                                            // 69\n     child_process = Npm.require('child_process'),                                                                  // 70\n     spawn = child_process.spawn,                                                                                   // 71\n     chokidar = Npm.require('chokidar'),                                                                            // 72\n     glob = Npm.require('glob'),                                                                                    // 73\n     _config = {},                                                                                                  // 74\n     _preProcessors = [],                                                                                           // 75\n     _postProcessors = [],                                                                                          // 76\n     _watcher,                                                                                                      // 77\n     FIXTURE_REG_EXP = new RegExp(\"-fixture.(js|coffee)$\"),                                                         // 78\n     DEFAULT_FIXTURE_PATH = getAssetPath('velocity:core', 'default-fixture.js');                                    // 79\n                                                                                                                    // 80\n Meteor.startup(function initializeVelocity () {                                                                    // 81\n   DEBUG && console.log('[velocity] PWD', process.env.PWD);                                                         // 82\n   DEBUG && console.log('velocity config =', JSON.stringify(_config, null, 2));                                     // 83\n                                                                                                                    // 84\n   // kick-off everything                                                                                           // 85\n   _reset(_config);                                                                                                 // 86\n });                                                                                                                // 87\n                                                                                                                    // 88\n//////////////////////////////////////////////////////////////////////                                               // 89\n// Public Methods                                                                                                    // 90\n//                                                                                                                   // 91\n                                                                                                                    // 92\n _.extend(Velocity, {                                                                                               // 93\n                                                                                                                    // 94\n   getMirrorPath: function () {                                                                                     // 95\n     return path.join(process.env.PWD, '.meteor', 'local', '.mirror');                                              // 96\n   },                                                                                                               // 97\n                                                                                                                    // 98\n   getTestsPath: function () {                                                                                      // 99\n     return path.join(process.env.PWD, 'tests');                                                                    // 100\n   },                                                                                                               // 101\n                                                                                                                    // 102\n   addPreProcessor: function (preProcessor) {                                                                       // 103\n     _preProcessors.push(preProcessor);                                                                             // 104\n   },                                                                                                               // 105\n                                                                                                                    // 106\n   addPostProcessor: function (reporter) {                                                                          // 107\n     _postProcessors.push(reporter);                                                                                // 108\n   },                                                                                                               // 109\n                                                                                                                    // 110\n   getReportGithubIssueMessage: function() {                                                                        // 111\n     return \"Please report the issue here: https://github.com/xolvio/velocity/issues\";                              // 112\n   }                                                                                                                // 113\n });                                                                                                                // 114\n                                                                                                                    // 115\n if (Meteor.isServer) {                                                                                             // 116\n   _.extend(Velocity, {                                                                                             // 117\n                                                                                                                    // 118\n     /**                                                                                                            // 119\nRegisters a testing framework plugin.                                                                       // 120\n                                                                                                            // 121"
        },
        {
            "file": ".build.velocity:core/os.osx.x86_64/packages/velocity:core/default-fixture.js",
            "line": 29,
            "description": "Meteor method: velocityResetDatabase\nThis truncate all collections in the app by using the native mongo object and calling collection.remove()",
            "itemtype": "method",
            "name": "velocityResetDatabase",
            "class": "Velocity                                                                                                   // 12\n/                                                                                                                  // 13\nVelocity = {};                                                                                                       // 14\n                                                                                                                    // 15\n(function () {                                                                                                       // 16\n 'use strict';                                                                                                      // 17\n                                                                                                                    // 18\n//////////////////////////////////////////////////////////////////////                                               // 19\n// Init                                                                                                              // 20\n//                                                                                                                   // 21\n                                                                                                                    // 22\n if (process.env.NODE_ENV !== 'development' || process.env.VELOCITY === '0' || process.env.IS_MIRROR) {             // 23\n   DEBUG && console.log('Not adding velocity code');                                                                // 24\n   return;                                                                                                          // 25\n }                                                                                                                  // 26\n                                                                                                                    // 27\n var isMeteor92OrNewer = function () {                                                                              // 28\n   if (Meteor.release) {                                                                                            // 29\n     var versionRegExp = /(?:METEOR@)?(\\d+)\\.(\\d+)\\.(\\d+)(?:\\.(\\d+))/;                                              // 30\n     var version = versionRegExp.exec(Meteor.release);                                                              // 31\n     if (version) {                                                                                                 // 32\n       var majorVersion = Number(version[1]);                                                                       // 33\n       var minorVersion = Number(version[2]);                                                                       // 34\n       var patchVersion = Number(version[3]);                                                                       // 35\n       if (majorVersion > 0 ||                                                                                      // 36\n         (majorVersion == 0 && minorVersion > 9) ||                                                                 // 37\n         (majorVersion == 0 && minorVersion == 9 && patchVersion >= 2)                                              // 38\n         ) {                                                                                                        // 39\n         return true;                                                                                               // 40\n       }                                                                                                            // 41\n     }                                                                                                              // 42\n   }                                                                                                                // 43\n                                                                                                                    // 44\n   return false;                                                                                                    // 45\n };                                                                                                                 // 46\n                                                                                                                    // 47\n var getAssetPath = function (packageName, fileName) {                                                              // 48\n   var serverAssetsPath = path.join(                                                                                // 49\n     process.env.PWD, '.meteor', 'local', 'build', 'programs', 'server', 'assets'                                   // 50\n   );                                                                                                               // 51\n   if (isMeteor92OrNewer()) {                                                                                       // 52\n     packageName = packageName.replace(':', '_')                                                                    // 53\n   }                                                                                                                // 54\n                                                                                                                    // 55\n   return path.join(serverAssetsPath, 'packages', packageName, fileName);                                           // 56\n };                                                                                                                 // 57\n                                                                                                                    // 58\n var _ = Npm.require('lodash'),                                                                                     // 59\n     fs = Npm.require('fs'),                                                                                        // 60\n     fse = Npm.require('fs-extra'),                                                                                 // 61\n     readFile = Meteor._wrapAsync(fs.readFile),                                                                     // 62\n     writeFile = Meteor._wrapAsync(fs.writeFile),                                                                   // 63\n     copyFile = Meteor._wrapAsync(fse.copy),                                                                        // 64\n     path = Npm.require('path'),                                                                                    // 65\n     url = Npm.require('url'),                                                                                      // 66\n     Rsync = Npm.require('rsync'),                                                                                  // 67\n     Future = Npm.require('fibers/future'),                                                                         // 68\n     freeport = Npm.require('freeport'),                                                                            // 69\n     child_process = Npm.require('child_process'),                                                                  // 70\n     spawn = child_process.spawn,                                                                                   // 71\n     chokidar = Npm.require('chokidar'),                                                                            // 72\n     glob = Npm.require('glob'),                                                                                    // 73\n     _config = {},                                                                                                  // 74\n     _preProcessors = [],                                                                                           // 75\n     _postProcessors = [],                                                                                          // 76\n     _watcher,                                                                                                      // 77\n     FIXTURE_REG_EXP = new RegExp(\"-fixture.(js|coffee)$\"),                                                         // 78\n     DEFAULT_FIXTURE_PATH = getAssetPath('velocity:core', 'default-fixture.js');                                    // 79\n                                                                                                                    // 80\n Meteor.startup(function initializeVelocity () {                                                                    // 81\n   DEBUG && console.log('[velocity] PWD', process.env.PWD);                                                         // 82\n   DEBUG && console.log('velocity config =', JSON.stringify(_config, null, 2));                                     // 83\n                                                                                                                    // 84\n   // kick-off everything                                                                                           // 85\n   _reset(_config);                                                                                                 // 86\n });                                                                                                                // 87\n                                                                                                                    // 88\n//////////////////////////////////////////////////////////////////////                                               // 89\n// Public Methods                                                                                                    // 90\n//                                                                                                                   // 91\n                                                                                                                    // 92\n _.extend(Velocity, {                                                                                               // 93\n                                                                                                                    // 94\n   getMirrorPath: function () {                                                                                     // 95\n     return path.join(process.env.PWD, '.meteor', 'local', '.mirror');                                              // 96\n   },                                                                                                               // 97\n                                                                                                                    // 98\n   getTestsPath: function () {                                                                                      // 99\n     return path.join(process.env.PWD, 'tests');                                                                    // 100\n   },                                                                                                               // 101\n                                                                                                                    // 102\n   addPreProcessor: function (preProcessor) {                                                                       // 103\n     _preProcessors.push(preProcessor);                                                                             // 104\n   },                                                                                                               // 105\n                                                                                                                    // 106\n   addPostProcessor: function (reporter) {                                                                          // 107\n     _postProcessors.push(reporter);                                                                                // 108\n   },                                                                                                               // 109\n                                                                                                                    // 110\n   getReportGithubIssueMessage: function() {                                                                        // 111\n     return \"Please report the issue here: https://github.com/xolvio/velocity/issues\";                              // 112\n   }                                                                                                                // 113\n });                                                                                                                // 114\n                                                                                                                    // 115\n if (Meteor.isServer) {                                                                                             // 116\n   _.extend(Velocity, {                                                                                             // 117\n                                                                                                                    // 118\n     /**                                                                                                            // 119\nRegisters a testing framework plugin.                                                                       // 120\n                                                                                                            // 121"
        },
        {
            "file": ".build10059..build.velocity:core/os.osx.x86_64/packages/velocity:core/default-fixture.js",
            "line": 19,
            "description": "Meteor method: velocityIsMirror\nExposes the IS_MIRROR flag to mirror clients",
            "itemtype": "method",
            "name": "velocityIsMirror",
            "class": "Velocity                                                                                                   // 12\n/                                                                                                                  // 13\nVelocity = {};                                                                                                       // 14\n                                                                                                                    // 15\n(function () {                                                                                                       // 16\n 'use strict';                                                                                                      // 17\n                                                                                                                    // 18\n//////////////////////////////////////////////////////////////////////                                               // 19\n// Init                                                                                                              // 20\n//                                                                                                                   // 21\n                                                                                                                    // 22\n if (process.env.NODE_ENV !== 'development' || process.env.VELOCITY === '0' || process.env.IS_MIRROR) {             // 23\n   DEBUG && console.log('Not adding velocity code');                                                                // 24\n   return;                                                                                                          // 25\n }                                                                                                                  // 26\n                                                                                                                    // 27\n var isMeteor92OrNewer = function () {                                                                              // 28\n   if (Meteor.release) {                                                                                            // 29\n     var versionRegExp = /(?:METEOR@)?(\\d+)\\.(\\d+)\\.(\\d+)(?:\\.(\\d+))/;                                              // 30\n     var version = versionRegExp.exec(Meteor.release);                                                              // 31\n     if (version) {                                                                                                 // 32\n       var majorVersion = Number(version[1]);                                                                       // 33\n       var minorVersion = Number(version[2]);                                                                       // 34\n       var patchVersion = Number(version[3]);                                                                       // 35\n       if (majorVersion > 0 ||                                                                                      // 36\n         (majorVersion == 0 && minorVersion > 9) ||                                                                 // 37\n         (majorVersion == 0 && minorVersion == 9 && patchVersion >= 2)                                              // 38\n         ) {                                                                                                        // 39\n         return true;                                                                                               // 40\n       }                                                                                                            // 41\n     }                                                                                                              // 42\n   }                                                                                                                // 43\n                                                                                                                    // 44\n   return false;                                                                                                    // 45\n };                                                                                                                 // 46\n                                                                                                                    // 47\n var getAssetPath = function (packageName, fileName) {                                                              // 48\n   var serverAssetsPath = path.join(                                                                                // 49\n     process.env.PWD, '.meteor', 'local', 'build', 'programs', 'server', 'assets'                                   // 50\n   );                                                                                                               // 51\n   if (isMeteor92OrNewer()) {                                                                                       // 52\n     packageName = packageName.replace(':', '_')                                                                    // 53\n   }                                                                                                                // 54\n                                                                                                                    // 55\n   return path.join(serverAssetsPath, 'packages', packageName, fileName);                                           // 56\n };                                                                                                                 // 57\n                                                                                                                    // 58\n var _ = Npm.require('lodash'),                                                                                     // 59\n     fs = Npm.require('fs'),                                                                                        // 60\n     fse = Npm.require('fs-extra'),                                                                                 // 61\n     readFile = Meteor._wrapAsync(fs.readFile),                                                                     // 62\n     writeFile = Meteor._wrapAsync(fs.writeFile),                                                                   // 63\n     copyFile = Meteor._wrapAsync(fse.copy),                                                                        // 64\n     path = Npm.require('path'),                                                                                    // 65\n     url = Npm.require('url'),                                                                                      // 66\n     Rsync = Npm.require('rsync'),                                                                                  // 67\n     Future = Npm.require('fibers/future'),                                                                         // 68\n     freeport = Npm.require('freeport'),                                                                            // 69\n     child_process = Npm.require('child_process'),                                                                  // 70\n     spawn = child_process.spawn,                                                                                   // 71\n     chokidar = Npm.require('chokidar'),                                                                            // 72\n     glob = Npm.require('glob'),                                                                                    // 73\n     _config = {},                                                                                                  // 74\n     _preProcessors = [],                                                                                           // 75\n     _postProcessors = [],                                                                                          // 76\n     _watcher,                                                                                                      // 77\n     FIXTURE_REG_EXP = new RegExp(\"-fixture.(js|coffee)$\"),                                                         // 78\n     DEFAULT_FIXTURE_PATH = getAssetPath('velocity:core', 'default-fixture.js');                                    // 79\n                                                                                                                    // 80\n Meteor.startup(function initializeVelocity () {                                                                    // 81\n   DEBUG && console.log('[velocity] PWD', process.env.PWD);                                                         // 82\n   DEBUG && console.log('velocity config =', JSON.stringify(_config, null, 2));                                     // 83\n                                                                                                                    // 84\n   // kick-off everything                                                                                           // 85\n   _reset(_config);                                                                                                 // 86\n });                                                                                                                // 87\n                                                                                                                    // 88\n//////////////////////////////////////////////////////////////////////                                               // 89\n// Public Methods                                                                                                    // 90\n//                                                                                                                   // 91\n                                                                                                                    // 92\n _.extend(Velocity, {                                                                                               // 93\n                                                                                                                    // 94\n   getMirrorPath: function () {                                                                                     // 95\n     return path.join(process.env.PWD, '.meteor', 'local', '.mirror');                                              // 96\n   },                                                                                                               // 97\n                                                                                                                    // 98\n   getTestsPath: function () {                                                                                      // 99\n     return path.join(process.env.PWD, 'tests');                                                                    // 100\n   },                                                                                                               // 101\n                                                                                                                    // 102\n   addPreProcessor: function (preProcessor) {                                                                       // 103\n     _preProcessors.push(preProcessor);                                                                             // 104\n   },                                                                                                               // 105\n                                                                                                                    // 106\n   addPostProcessor: function (reporter) {                                                                          // 107\n     _postProcessors.push(reporter);                                                                                // 108\n   },                                                                                                               // 109\n                                                                                                                    // 110\n   getReportGithubIssueMessage: function() {                                                                        // 111\n     return \"Please report the issue here: https://github.com/xolvio/velocity/issues\";                              // 112\n   }                                                                                                                // 113\n });                                                                                                                // 114\n                                                                                                                    // 115\n if (Meteor.isServer) {                                                                                             // 116\n   _.extend(Velocity, {                                                                                             // 117\n                                                                                                                    // 118\n     /**                                                                                                            // 119\nRegisters a testing framework plugin.                                                                       // 120\n                                                                                                            // 121",
            "module": "Velocity                                                                                                  // 9\n/                                                                                                                  // 10\n/**                                                                                                                  // 11"
        },
        {
            "file": ".build10059..build.velocity:core/os.osx.x86_64/packages/velocity:core/default-fixture.js",
            "line": 29,
            "description": "Meteor method: velocityResetDatabase\nThis truncate all collections in the app by using the native mongo object and calling collection.remove()",
            "itemtype": "method",
            "name": "velocityResetDatabase",
            "class": "Velocity                                                                                                   // 12\n/                                                                                                                  // 13\nVelocity = {};                                                                                                       // 14\n                                                                                                                    // 15\n(function () {                                                                                                       // 16\n 'use strict';                                                                                                      // 17\n                                                                                                                    // 18\n//////////////////////////////////////////////////////////////////////                                               // 19\n// Init                                                                                                              // 20\n//                                                                                                                   // 21\n                                                                                                                    // 22\n if (process.env.NODE_ENV !== 'development' || process.env.VELOCITY === '0' || process.env.IS_MIRROR) {             // 23\n   DEBUG && console.log('Not adding velocity code');                                                                // 24\n   return;                                                                                                          // 25\n }                                                                                                                  // 26\n                                                                                                                    // 27\n var isMeteor92OrNewer = function () {                                                                              // 28\n   if (Meteor.release) {                                                                                            // 29\n     var versionRegExp = /(?:METEOR@)?(\\d+)\\.(\\d+)\\.(\\d+)(?:\\.(\\d+))/;                                              // 30\n     var version = versionRegExp.exec(Meteor.release);                                                              // 31\n     if (version) {                                                                                                 // 32\n       var majorVersion = Number(version[1]);                                                                       // 33\n       var minorVersion = Number(version[2]);                                                                       // 34\n       var patchVersion = Number(version[3]);                                                                       // 35\n       if (majorVersion > 0 ||                                                                                      // 36\n         (majorVersion == 0 && minorVersion > 9) ||                                                                 // 37\n         (majorVersion == 0 && minorVersion == 9 && patchVersion >= 2)                                              // 38\n         ) {                                                                                                        // 39\n         return true;                                                                                               // 40\n       }                                                                                                            // 41\n     }                                                                                                              // 42\n   }                                                                                                                // 43\n                                                                                                                    // 44\n   return false;                                                                                                    // 45\n };                                                                                                                 // 46\n                                                                                                                    // 47\n var getAssetPath = function (packageName, fileName) {                                                              // 48\n   var serverAssetsPath = path.join(                                                                                // 49\n     process.env.PWD, '.meteor', 'local', 'build', 'programs', 'server', 'assets'                                   // 50\n   );                                                                                                               // 51\n   if (isMeteor92OrNewer()) {                                                                                       // 52\n     packageName = packageName.replace(':', '_')                                                                    // 53\n   }                                                                                                                // 54\n                                                                                                                    // 55\n   return path.join(serverAssetsPath, 'packages', packageName, fileName);                                           // 56\n };                                                                                                                 // 57\n                                                                                                                    // 58\n var _ = Npm.require('lodash'),                                                                                     // 59\n     fs = Npm.require('fs'),                                                                                        // 60\n     fse = Npm.require('fs-extra'),                                                                                 // 61\n     readFile = Meteor._wrapAsync(fs.readFile),                                                                     // 62\n     writeFile = Meteor._wrapAsync(fs.writeFile),                                                                   // 63\n     copyFile = Meteor._wrapAsync(fse.copy),                                                                        // 64\n     path = Npm.require('path'),                                                                                    // 65\n     url = Npm.require('url'),                                                                                      // 66\n     Rsync = Npm.require('rsync'),                                                                                  // 67\n     Future = Npm.require('fibers/future'),                                                                         // 68\n     freeport = Npm.require('freeport'),                                                                            // 69\n     child_process = Npm.require('child_process'),                                                                  // 70\n     spawn = child_process.spawn,                                                                                   // 71\n     chokidar = Npm.require('chokidar'),                                                                            // 72\n     glob = Npm.require('glob'),                                                                                    // 73\n     _config = {},                                                                                                  // 74\n     _preProcessors = [],                                                                                           // 75\n     _postProcessors = [],                                                                                          // 76\n     _watcher,                                                                                                      // 77\n     FIXTURE_REG_EXP = new RegExp(\"-fixture.(js|coffee)$\"),                                                         // 78\n     DEFAULT_FIXTURE_PATH = getAssetPath('velocity:core', 'default-fixture.js');                                    // 79\n                                                                                                                    // 80\n Meteor.startup(function initializeVelocity () {                                                                    // 81\n   DEBUG && console.log('[velocity] PWD', process.env.PWD);                                                         // 82\n   DEBUG && console.log('velocity config =', JSON.stringify(_config, null, 2));                                     // 83\n                                                                                                                    // 84\n   // kick-off everything                                                                                           // 85\n   _reset(_config);                                                                                                 // 86\n });                                                                                                                // 87\n                                                                                                                    // 88\n//////////////////////////////////////////////////////////////////////                                               // 89\n// Public Methods                                                                                                    // 90\n//                                                                                                                   // 91\n                                                                                                                    // 92\n _.extend(Velocity, {                                                                                               // 93\n                                                                                                                    // 94\n   getMirrorPath: function () {                                                                                     // 95\n     return path.join(process.env.PWD, '.meteor', 'local', '.mirror');                                              // 96\n   },                                                                                                               // 97\n                                                                                                                    // 98\n   getTestsPath: function () {                                                                                      // 99\n     return path.join(process.env.PWD, 'tests');                                                                    // 100\n   },                                                                                                               // 101\n                                                                                                                    // 102\n   addPreProcessor: function (preProcessor) {                                                                       // 103\n     _preProcessors.push(preProcessor);                                                                             // 104\n   },                                                                                                               // 105\n                                                                                                                    // 106\n   addPostProcessor: function (reporter) {                                                                          // 107\n     _postProcessors.push(reporter);                                                                                // 108\n   },                                                                                                               // 109\n                                                                                                                    // 110\n   getReportGithubIssueMessage: function() {                                                                        // 111\n     return \"Please report the issue here: https://github.com/xolvio/velocity/issues\";                              // 112\n   }                                                                                                                // 113\n });                                                                                                                // 114\n                                                                                                                    // 115\n if (Meteor.isServer) {                                                                                             // 116\n   _.extend(Velocity, {                                                                                             // 117\n                                                                                                                    // 118\n     /**                                                                                                            // 119\nRegisters a testing framework plugin.                                                                       // 120\n                                                                                                            // 121",
            "module": "Velocity                                                                                                  // 9\n/                                                                                                                  // 10\n/**                                                                                                                  // 11"
        },
        {
            "file": "lib/FileCopier.js",
            "line": 58,
            "description": "Starts copying files to the mirror.",
            "itemtype": "method",
            "name": "start",
            "memberof": "Velocity.FileCopier.prototype",
            "class": "FileCopier",
            "module": "Velocity                                                                                                  // 9\n/                                                                                                                  // 10\n/**                                                                                                                  // 11"
        },
        {
            "file": "lib/FileCopier.js",
            "line": 78,
            "description": "Stops copying files to the mirror.",
            "memberof": "Velocity.FileCopier.prototype",
            "class": "FileCopier",
            "module": "Velocity                                                                                                  // 9\n/                                                                                                                  // 10\n/**                                                                                                                  // 11"
        },
        {
            "file": "default-fixture.js",
            "line": 19,
            "description": "Meteor method: velocityIsMirror\nExposes the IS_MIRROR flag to mirror clients",
            "itemtype": "method",
            "name": "velocityIsMirror",
            "class": "Velocity",
            "module": "Velocity                                                                                                  // 9\n/                                                                                                                  // 10\n/**                                                                                                                  // 11"
        },
        {
            "file": "default-fixture.js",
            "line": 29,
            "description": "Meteor method: velocityResetDatabase\nThis truncate all collections in the app by using the native mongo object and calling collection.remove()",
            "itemtype": "method",
            "name": "velocityResetDatabase",
            "class": "Velocity",
            "module": "Velocity                                                                                                  // 9\n/                                                                                                                  // 10\n/**                                                                                                                  // 11"
        },
        {
            "file": "main.js",
            "line": 119,
            "description": "Registers a testing framework plugin.",
            "itemtype": "method",
            "name": "registerTestingFramework",
            "params": [
                {
                    "name": "name",
                    "description": "The name of the testing framework.",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "Options for the testing framework.",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "regex",
                            "description": "The regular expression for\n                                test files that should be assigned\n                                to the testing framework.\n                                The path relative to the tests\n                                folder is matched against it.\n                                The default is \"name/.+\\.js$\"\n                                (name is the testing framework name).",
                            "type": "String",
                            "optional": true
                        }
                    ]
                }
            ],
            "class": "Velocity",
            "module": "Velocity"
        },
        {
            "file": "main.js",
            "line": 198,
            "description": "Meteor method: reset\nRe-init file watcher and clear all test results.",
            "itemtype": "method",
            "name": "reset",
            "class": "Velocity",
            "module": "Velocity"
        },
        {
            "file": "main.js",
            "line": 208,
            "description": "Meteor method: resetReports\nClear all test results.",
            "itemtype": "method",
            "name": "resetReports",
            "params": [
                {
                    "name": "options",
                    "description": "Optional, specify specific framework to clear\n                and/or define a list of tests to keep.\n                ex.\n                {\n                  framework: 'jasmine-unit',\n                  notIn: ['tests/auth-jasmine-unit.js']\n                }",
                    "type": "Object",
                    "optional": true
                }
            ],
            "class": "Velocity",
            "module": "Velocity"
        },
        {
            "file": "main.js",
            "line": 239,
            "description": "Meteor method: resetLogs\nClear all log entried.",
            "itemtype": "method",
            "name": "resetLogs",
            "params": [
                {
                    "name": "options",
                    "description": "Optional, specify specific framework to clear",
                    "type": "Object",
                    "optional": true
                }
            ],
            "class": "Velocity",
            "module": "Velocity"
        },
        {
            "file": "main.js",
            "line": 259,
            "description": "Meteor method: postLog\nLog a method to the central Velocity log store.",
            "itemtype": "method",
            "name": "postLog",
            "params": [
                {
                    "name": "options",
                    "description": "Required parameters:\n                  type - String\n                  message - String\n                  framework - String  ex. 'jasmine-unit'\n\n                Optional parameters:\n                  timestamp - Date",
                    "type": "Object"
                }
            ],
            "class": "Velocity",
            "module": "Velocity"
        },
        {
            "file": "main.js",
            "line": 289,
            "description": "Meteor method: postResult\nRecord the results of a test run.",
            "itemtype": "method",
            "name": "postResult",
            "params": [
                {
                    "name": "data",
                    "description": "Required fields:\n                  id - String\n                  name - String\n                  framework - String  ex. 'jasmine-unit'\n                  result - String.  ex. 'failed', 'passed' or 'pending'\n\n                Suggested fields:\n                  isClient - {Boolean] Is it a client test?\n                  isServer - {Boolean} Is it a server test?\n                  browser  - {String} In which browser did the test run?\n                  timestamp - {Date} The time that the test started for this result\n                  async - // TODO @rissem to write\n                  timeOut - // TODO @rissem to write\n                  failureType - {String} ex 'expect' or 'assert'\n                  failureMessage - {String} The failure message from the test framework\n                  failureStackTrace - {String} The stack trace associated with the failure\n                  ancestors - The hierarchy of suites and blocks above this test\n                              ex. 'Template.leaderboard.selected_name'",
                    "type": "Object"
                }
            ],
            "class": "Velocity",
            "module": "Velocity"
        },
        {
            "file": "main.js",
            "line": 337,
            "description": "Meteor method: completed\nFrameworks must call this method to inform Velocity they have completed\ntheir current test runs. Velocity uses this flag when running in CI mode.",
            "itemtype": "method",
            "name": "completed",
            "params": [
                {
                    "name": "data",
                    "description": "Required fields:\n                  framework - String  ex. 'jasmine-unit'",
                    "type": "Object"
                }
            ],
            "class": "Velocity",
            "module": "Velocity"
        },
        {
            "file": "main.js",
            "line": 355,
            "description": "Meteor method: copySampleTests\nCopy sample tests from frameworks `sample-tests` directories\nto user's `app/tests` directory.",
            "itemtype": "method",
            "name": "copySampleTests",
            "params": [
                {
                    "name": "options",
                    "description": "ex. {framework: 'jasmine-unit'}",
                    "type": "Object"
                }
            ],
            "class": "Velocity",
            "module": "Velocity"
        },
        {
            "file": "main.js",
            "line": 400,
            "description": "Meteor method: velocityStartMirror\n\nStarts a mirror and copies any specified fixture files into the mirror.\nTODO and will remove any registered frameworks and reporters from the mirror",
            "itemtype": "method",
            "name": "velocityStartMirror",
            "params": [
                {
                    "name": "options",
                    "description": "Required fields:\n                  name - String ex. 'mocha-web-1'\n\n                Optional parameters:\n                  fixtureFiles - Array of files with absolute paths\n                  port - String use a specific port instead of finding the next available one",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "the url of started mirror"
            },
            "class": "Velocity",
            "module": "Velocity"
        },
        {
            "file": "main.js",
            "line": 502,
            "description": "Meteor method: velocityIsMirror\nExposes the IS_MIRROR flag to clients",
            "itemtype": "method",
            "name": "velocityIsMirror",
            "class": "Velocity",
            "module": "Velocity"
        },
        {
            "file": "main.js",
            "line": 522,
            "description": "Returns the MongoDB URL for the given database.",
            "params": [
                {
                    "name": "database",
                    "description": ""
                }
            ],
            "return": {
                "description": "MongoDB Url",
                "type": "String"
            },
            "access": "private",
            "tagname": "",
            "class": "Velocity",
            "module": "Velocity"
        },
        {
            "file": "main.js",
            "line": 540,
            "description": "Return URL for the mirror with the given port.",
            "params": [
                {
                    "name": "port",
                    "description": "Mirror port"
                }
            ],
            "return": {
                "description": "Mirror URL",
                "type": "String"
            },
            "access": "private",
            "tagname": "",
            "class": "Velocity",
            "module": "Velocity"
        },
        {
            "file": "main.js",
            "line": 558,
            "description": "Add fixtures to the database.",
            "params": [
                {
                    "name": "fixtureFiles",
                    "description": "Array with fixture file paths."
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Velocity",
            "module": "Velocity"
        },
        {
            "file": "main.js",
            "line": 572,
            "description": "Performs a http get and retries the specified number of times with the specified timeouts.\n Uses a future to respond and the future return object can be provided.",
            "itemtype": "method",
            "name": "_retryHttpGet",
            "params": [
                {
                    "name": "url",
                    "description": "requiredFields  The target location"
                },
                {
                    "name": "futureResponse",
                    "description": "optional        The future response that will be augmented with the\n                                              http status code (if successful)"
                },
                {
                    "name": "preResponseCallback",
                    "description": "optional        Maximum number of retries"
                },
                {
                    "name": "retries",
                    "description": "optional        Maximum number of retries"
                },
                {
                    "name": "maxTimeout",
                    "description": "optional        Maximum time to wait for the location to respond"
                }
            ],
            "return": {
                "description": "A future that can be used in meteor methods (or for other async needs)"
            },
            "access": "private",
            "tagname": "",
            "class": "Velocity",
            "module": "Velocity"
        },
        {
            "file": "main.js",
            "line": 617,
            "description": "Matcher for checking if a value is one of the given values.",
            "params": [
                {
                    "name": "values",
                    "description": "Valid values.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "access": "private",
            "tagname": "",
            "class": "Velocity",
            "module": "Velocity"
        },
        {
            "file": "main.js",
            "line": 641,
            "description": "Initialize the directory/file watcher.",
            "itemtype": "method",
            "name": "_initWatcher",
            "params": [
                {
                    "name": "config",
                    "description": "See `registerTestingFramework`.",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Velocity",
            "module": "Velocity"
        },
        {
            "file": "main.js",
            "line": 720,
            "description": "Re-init file watcher and clear all test results.",
            "itemtype": "method",
            "name": "_reset",
            "params": [
                {
                    "name": "config",
                    "description": "See `registerTestingFramework`.",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Velocity",
            "module": "Velocity"
        },
        {
            "file": "main.js",
            "line": 763,
            "description": "If any one test has failed, mark the aggregate test result as failed.",
            "itemtype": "method",
            "name": "_updateAggregateReports",
            "access": "private",
            "tagname": "",
            "class": "Velocity",
            "module": "Velocity"
        },
        {
            "file": "main.js",
            "line": 821,
            "description": "Creates a physical mirror of the application under .meteor/local/.mirror\n\n    - Any files with the pattern tests/.*  are not copied, this stops .report\n    directory from also being copied.\n\n    TODO - Strips out velocity, any test packages and reporters from the mirror's .meteor/packages file",
            "itemtype": "method",
            "name": "_syncMirror",
            "access": "private",
            "tagname": "",
            "class": "Velocity",
            "module": "Velocity"
        }
    ],
    "warnings": [
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " .build.velocity:core/os.osx.x86_64/packages/velocity:core.js:85"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " .build.velocity:core/os.osx.x86_64/packages/velocity:core.js:85"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " .build.velocity:core/os.osx.x86_64/packages/velocity:core.js:85"
        },
        {
            "message": "unknown tag: memberof",
            "line": " .build.velocity:core/os.osx.x86_64/packages/velocity:core.js:85"
        },
        {
            "message": "unknown tag: memberof",
            "line": " .build.velocity:core/os.osx.x86_64/packages/velocity:core.js:85"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " .build10059..build.velocity:core/os.osx.x86_64/packages/velocity:core.js:85"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " .build10059..build.velocity:core/os.osx.x86_64/packages/velocity:core.js:85"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " .build10059..build.velocity:core/os.osx.x86_64/packages/velocity:core.js:85"
        },
        {
            "message": "unknown tag: memberof",
            "line": " .build10059..build.velocity:core/os.osx.x86_64/packages/velocity:core.js:85"
        },
        {
            "message": "unknown tag: memberof",
            "line": " .build10059..build.velocity:core/os.osx.x86_64/packages/velocity:core.js:85"
        },
        {
            "message": "unknown tag: memberof",
            "line": " lib/FileCopier.js:58"
        },
        {
            "message": "unknown tag: memberof",
            "line": " lib/FileCopier.js:78"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " main.js:522"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " main.js:540"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " main.js:617"
        },
        {
            "message": "Missing item type\nStops copying files to the mirror.",
            "line": " lib/FileCopier.js:78"
        },
        {
            "message": "Missing item type\nReturns the MongoDB URL for the given database.",
            "line": " main.js:522"
        },
        {
            "message": "Missing item type\nReturn URL for the mirror with the given port.",
            "line": " main.js:540"
        },
        {
            "message": "Missing item type\nAdd fixtures to the database.",
            "line": " main.js:558"
        },
        {
            "message": "Missing item type\nMatcher for checking if a value is one of the given values.",
            "line": " main.js:617"
        }
    ]
}